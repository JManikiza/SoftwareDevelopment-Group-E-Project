{"version":3,"sources":["../src/index.js"],"names":["React","Component","PropTypes","ComposedComponent","MultiInputInput","e","key","props","value","target","onChange","mergeValueFromEvent","Object","values","inputs","some","input","relatedTarget","onBlur","onFocus","render","state","handleChange","handleBlur","handleFocus","propTypes","object","func","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,gBAAe,UAACC,iBAAD,EAAuB;AAAA,MAC9BC,eAD8B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,oGAEZ,UAACC,CAAD,EAAIC,GAAJ;AAAA;;AAAA,4BACjB,MAAKC,KAAL,CAAWC,KADM,6BAEnBF,GAFmB,IAEbD,CAAC,CAACI,MAAF,CAASD,KAFI;AAAA,OAFY;;AAAA,6FAOnB,UAACH,CAAD,EAAIC,GAAJ,EAAY;AACzB,cAAKC,KAAL,CAAWG,QAAX,CAAoB,MAAKC,mBAAL,CAAyBN,CAAzB,EAA4BC,GAA5B,CAApB;AACD,OATiC;;AAAA,2FAWrB,UAACD,CAAD,EAAIC,GAAJ,EAAY;AACvB,YAAI,CAACM,MAAM,CAACC,MAAP,CAAc,MAAKC,MAAnB,EAA2BC,IAA3B,CAAgC,UAAAC,KAAK;AAAA,iBAAIX,CAAC,CAACY,aAAF,KAAoBD,KAAxB;AAAA,SAArC,CAAL,EAA0E;AACxE,gBAAKT,KAAL,CAAWW,MAAX,CAAkB,MAAKP,mBAAL,CAAyBN,CAAzB,EAA4BC,GAA5B,CAAlB;AACD;AACF,OAfiC;;AAAA,4FAiBpB,UAACD,CAAD,EAAIC,GAAJ,EAAY;AACxB,YAAI,CAACM,MAAM,CAACC,MAAP,CAAc,MAAKC,MAAnB,EAA2BC,IAA3B,CAAgC,UAAAC,KAAK;AAAA,iBAAIX,CAAC,CAACY,aAAF,KAAoBD,KAAxB;AAAA,SAArC,CAAL,EAA0E;AACxE,gBAAKT,KAAL,CAAWY,OAAX,CAAmB,MAAKR,mBAAL,CAAyBN,CAAzB,EAA4BC,GAA5B,CAAnB;AACD;AACF,OArBiC;;AAAA;AAAA;;AAAA;;AAAA,WAuBlCc,MAvBkC,qBAuBzB;AAAA;;AACP,aAAQ,oBAAC,iBAAD;AACN,QAAA,IAAI,EAAE,cAACN,MAAD,EAAY;AAAE,UAAA,MAAI,CAACA,MAAL,GAAcA,MAAd;AAAuB;AADrC,SAEF,KAAKP,KAFH,EAGF,KAAKc,KAHH;AAIN,QAAA,QAAQ,EAAE,KAAKC,YAJT;AAKN,QAAA,MAAM,EAAE,KAAKC,UALP;AAMN,QAAA,OAAO,EAAE,KAAKC;AANR,SAAR;AAQD,KAhCiC;;AAAA;AAAA,IACNvB,SADM;;AAmCpCG,EAAAA,eAAe,CAACqB,SAAhB,GAA4B;AAC1BjB,IAAAA,KAAK,EAAEN,SAAS,CAACwB,MADS;AAE1BhB,IAAAA,QAAQ,EAAER,SAAS,CAACyB,IAFM;AAG1BT,IAAAA,MAAM,EAAEhB,SAAS,CAACyB,IAHQ;AAI1BR,IAAAA,OAAO,EAAEjB,SAAS,CAACyB;AAJO,GAA5B;AAOAvB,EAAAA,eAAe,CAACwB,YAAhB,GAA+B;AAC7BpB,IAAAA,KAAK,EAAE,EADsB;AAE7BE,IAAAA,QAAQ,EAAE;AAAA,aAAM,IAAN;AAAA,KAFmB;AAG7BQ,IAAAA,MAAM,EAAE;AAAA,aAAM,IAAN;AAAA,KAHqB;AAI7BC,IAAAA,OAAO,EAAE;AAAA,aAAM,IAAN;AAAA;AAJoB,GAA/B;AAQA,SAAOf,eAAP;AACD,CAnDD","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Modifies a component that contains multiple inputs to behave as though it was a single input by:\n// - merging values in to an object\n// - not calling onBlur when going from field to field within the same component\n// - not calling onFocus when going frmo field to field within the same component\nexport default (ComposedComponent) => {\n  class MultiInputInput extends Component {\n    mergeValueFromEvent = (e, key) => ({\n      ...this.props.value,\n      [key]: e.target.value,\n    })\n\n    handleChange = (e, key) => {\n      this.props.onChange(this.mergeValueFromEvent(e, key));\n    }\n\n    handleBlur = (e, key) => {\n      if (!Object.values(this.inputs).some(input => e.relatedTarget === input)) {\n        this.props.onBlur(this.mergeValueFromEvent(e, key));\n      }\n    }\n\n    handleFocus = (e, key) => {\n      if (!Object.values(this.inputs).some(input => e.relatedTarget === input)) {\n        this.props.onFocus(this.mergeValueFromEvent(e, key));\n      }\n    }\n\n    render() {\n      return (<ComposedComponent\n        refs={(inputs) => { this.inputs = inputs; }}\n        {...this.props}\n        {...this.state}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n      />);\n    }\n  }\n\n  MultiInputInput.propTypes = {\n    value: PropTypes.object,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n  };\n\n  MultiInputInput.defaultProps = {\n    value: {},\n    onChange: () => null,\n    onBlur: () => null,\n    onFocus: () => null,\n  };\n\n\n  return MultiInputInput;\n};\n"],"file":"index.js"}