{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\ProfileChanges\\\\DOBChanges\\\\DOBChangeEnter.js\",\n  _s = $RefreshSig$();\n/**\r\n* Author(s) of this code: \r\n*\r\n* Joven Manikiza\r\n*/\n\nimport React, { useState } from \"react\";\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../../../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DOBChangeEnter() {\n  _s();\n  const navigate = useNavigate();\n  const [dob, setDOB] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(`dob: ${dob}`);\n\n    // check that dob is a valid date\n    const parsedDOB = Date.parse(dob);\n    if (isNaN(parsedDOB)) {\n      alert(\"Please enter a valid date of birth.\");\n      return;\n    }\n    const newDOB = new Date(parsedDOB);\n    console.log(`newDOB: ${newDOB}`);\n\n    // format the dob for display\n    const formattedDOB = `${newDOB.getDate()}/${newDOB.getMonth() + 1}/${newDOB.getFullYear()}`;\n    console.log(`formattedDOB: ${formattedDOB}`);\n\n    // navigate to confirmation page\n    navigate(\"/DOBChangeConfirmation\", {\n      state: {\n        dob: formattedDOB\n      }\n    });\n  };\n  console.log(\"dob:\", dob);\n  const handleDateChange = date => {\n    const day = date.day;\n    const month = date.month;\n    const year = date.year;\n    const dateString = `${day}/${month}/${year}`;\n    console.log(\"dateString:\", dateString);\n    const newDOB = new Date(dateString);\n    console.log(\"newDOB:\", newDOB);\n    setDOB(newDOB);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      pageLink1: \"/\",\n      PageName1: \"home\",\n      pageLink2: \"/login\",\n      PageName2: \"Login\",\n      pageLink3: \"/NhsNumber\",\n      PageName3: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DateField, {\n          input: {\n            onChange: handleDateChange,\n            name: \"dob\"\n          },\n          meta: {\n            touched: true,\n            error: !dob ? \"Please enter a valid date of birth.\" : undefined\n          },\n          name: \"dob\",\n          children: \"What is your date of birth?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {\n          level: \"SMALL\",\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/Profile\"),\n          buttonColour: \"GREY\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(DOBChangeEnter, \"0X4yzDQey3JLrlh4X/UqYcu6UKA=\", false, function () {\n  return [useNavigate];\n});\n_c = DOBChangeEnter;\nexport default DOBChangeEnter;\nvar _c;\n$RefreshReg$(_c, \"DOBChangeEnter\");","map":{"version":3,"names":["React","useState","DateField","Main","Button","SectionBreak","useNavigate","Navigation","jsxDEV","_jsxDEV","DOBChangeEnter","_s","navigate","dob","setDOB","handleSubmit","e","preventDefault","console","log","parsedDOB","Date","parse","isNaN","alert","newDOB","formattedDOB","getDate","getMonth","getFullYear","state","handleDateChange","date","day","month","year","dateString","children","pageLink1","PageName1","pageLink2","PageName2","pageLink3","PageName3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","input","onChange","name","meta","touched","error","undefined","level","visible","onClick","buttonColour","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/ProfileChanges/DOBChanges/DOBChangeEnter.js"],"sourcesContent":["/**\r\n* Author(s) of this code: \r\n*\r\n* Joven Manikiza\r\n*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navigation from \"../../../Navigation\";\r\n\r\nfunction DOBChangeEnter(){\r\n\r\n    const navigate = useNavigate();\r\n    const [dob, setDOB] = useState(null);\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  console.log(`dob: ${dob}`);\r\n\r\n  // check that dob is a valid date\r\n  const parsedDOB = Date.parse(dob);\r\n  if (isNaN(parsedDOB)) {\r\n    alert(\"Please enter a valid date of birth.\");\r\n    return;\r\n  }\r\n  const newDOB = new Date(parsedDOB);\r\n  console.log(`newDOB: ${newDOB}`);\r\n\r\n  // format the dob for display\r\n  const formattedDOB = `${newDOB.getDate()}/${newDOB.getMonth() + 1}/${newDOB.getFullYear()}`;\r\n  console.log(`formattedDOB: ${formattedDOB}`);\r\n\r\n  // navigate to confirmation page\r\n  navigate(\"/DOBChangeConfirmation\", { state: { dob: formattedDOB } });\r\n};\r\n\r\n\r\n    console.log(\"dob:\", dob);\r\n\r\n    const handleDateChange = (date) => {\r\n        const day = date.day;\r\n        const month = date.month;\r\n        const year = date.year;\r\n        const dateString = `${day}/${month}/${year}`;\r\n        console.log(\"dateString:\", dateString);\r\n        const newDOB = new Date(dateString);\r\n        console.log(\"newDOB:\", newDOB);\r\n        setDOB(newDOB);\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <Navigation pageLink1=\"/\" PageName1=\"home\" pageLink2=\"/login\" PageName2=\"Login\" pageLink3=\"/NhsNumber\" PageName3=\"Register\"/>\r\n\r\n            <Main>\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                  <DateField\r\n                      input={{\r\n                        onChange: handleDateChange,\r\n                        name: \"dob\",\r\n                      }}\r\n                      meta={{\r\n                        touched: true,\r\n                        error: !dob ? \"Please enter a valid date of birth.\" : undefined,\r\n                      }}\r\n                      name=\"dob\"\r\n                  >\r\n                      What is your date of birth?\r\n                  </DateField>\r\n\r\n                    <Button>\r\n                        Continue\r\n                    </Button>\r\n\r\n                    <SectionBreak level=\"SMALL\" visible={false}/>\r\n                    \r\n                    <Button onClick={() => navigate(\"/Profile\")} buttonColour=\"GREY\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </Main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DOBChangeEnter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}