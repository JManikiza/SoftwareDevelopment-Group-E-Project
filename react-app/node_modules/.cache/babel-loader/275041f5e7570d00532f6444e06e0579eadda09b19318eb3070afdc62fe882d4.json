{"ast":null,"code":"var _jsxFileName = \"/Users/wallysonsilva/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/StaffLoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StaffLoginForm() {\n  _s();\n  //const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const submitFormHandler = e => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/stafflogindata.php\",\n      type: \"POST\",\n      data: {\n        email: email,\n        password: password\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no users\") {\n          console.error(\"No users found.\");\n        } else {\n          let empId = response[0].empID;\n          let empName = response[0].empFName + \" \" + response[0].empLName;\n          let empType = response[0].employeeType;\n          console.log(empId);\n          console.log(empName);\n          console.log(empType);\n          localStorage.setItem(\"empId\", empId);\n          localStorage.setItem(\"empType\", empType);\n          //navigate(\"/\");\n        }\n      },\n\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      }\n    });\n  };\n\n  //Input validation\n  const emailHandler = e => {\n    let input = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (emailRegex.test(input)) {\n      setEmail(input);\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  //Input validation\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      children: /*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n          size: \"LARGE\",\n          children: \"Staff Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: emailHandler,\n          value: email,\n          input: {\n            name: \"email\",\n            type: \"email\"\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: pwHandler,\n          value: password,\n          input: {\n            name: \"password\",\n            type: \"password\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          margin: 3,\n          disabled: !validEmail || !validPw,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffLoginForm, \"Bu2/UQP1ZWIsDoposhiLh2+qOXU=\");\n_c = StaffLoginForm;\nexport default StaffLoginForm;\nvar _c;\n$RefreshReg$(_c, \"StaffLoginForm\");","map":{"version":3,"names":["React","useState","jq","Main","Fieldset","InputField","Button","jsxDEV","_jsxDEV","StaffLoginForm","_s","email","setEmail","password","setPassword","validEmail","setValidEmail","validPw","setValidPw","submitFormHandler","e","preventDefault","ajax","url","type","data","dataType","success","response","console","error","empId","empID","empName","empFName","empLName","empType","employeeType","log","localStorage","setItem","emailHandler","input","target","value","emailRegex","test","pwHandler","length","children","onSubmit","Legend","size","fileName","_jsxFileName","lineNumber","columnNumber","padding","onChange","name","margin","disabled","_c","$RefreshReg$"],"sources":["/Users/wallysonsilva/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/StaffLoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\n\nfunction StaffLoginForm() {\n  //const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/stafflogindata.php\",\n      type: \"POST\",\n      data: {\n        email: email,\n        password: password,\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no users\") {\n          console.error(\"No users found.\");\n        } else {\n          let empId = response[0].empID;\n          let empName = response[0].empFName + \" \" + response[0].empLName;\n          let empType = response[0].employeeType;\n          console.log(empId);\n          console.log(empName);\n          console.log(empType);\n          localStorage.setItem(\"empId\", empId);\n          localStorage.setItem(\"empType\", empType);\n          //navigate(\"/\");\n        }\n      },\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      },\n    });\n  };\n\n   //Input validation\n   const emailHandler = (e) => {\n    let input = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (emailRegex.test(input)) {\n      setEmail(input);\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  //Input validation\n  const pwHandler = (e) => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n\n\n  return (\n    <Main>\n      <form  onSubmit={submitFormHandler}>\n        <Fieldset>\n          <Fieldset.Legend size=\"LARGE\">Staff Login</Fieldset.Legend>\n          <InputField\n            padding={3}\n            onChange={emailHandler}\n            value={email}\n            input={{\n              name: \"email\",\n              type: \"email\",\n            }}\n          >\n            Username\n          </InputField>\n          <InputField\n            padding={3}\n            onChange={pwHandler}\n            value={password}\n            input={{\n              name: \"password\",\n              type: \"password\",\n            }}\n          >\n            Password\n          </InputField>\n          <Button type=\"submit\" margin={3} disabled={!validEmail || !validPw}>\n            Continue\n          </Button>\n        </Fieldset>\n      </form>\n    </Main>\n  );\n}\n\nexport default StaffLoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}