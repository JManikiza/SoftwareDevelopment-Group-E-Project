{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\sdgp\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\LoginComponents\\\\StaffLoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StaffLoginForm() {\n  _s();\n  //const navigate = useNavigate();\n\n  const [empId, setEmpId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmpId, setValidEmpId] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const empIdHandler = e => {\n    let input = e.target.value;\n    const regex = /^[0-9]+$/;\n    if (regex.test(input) && input.length > 3) {\n      setEmpId(input);\n      setValidEmpId(true);\n    } else {\n      setValidEmpId(false);\n    }\n  };\n  const submitFormHandler = e => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/stafflogindata.php\",\n      type: \"POST\",\n      data: {\n        empId: empId,\n        password: password\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no users\") {\n          console.error(\"No users found.\");\n        } else {\n          let userType = response[0];\n\n          //navigate(\"/\");\n        }\n      },\n\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      }\n    });\n  };\n\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 0) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      children: /*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n          size: \"LARGE\",\n          children: \"Staff Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: empIdHandler,\n          value: empId,\n          input: {\n            name: \"empId\",\n            type: \"text\"\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: pwHandler,\n          value: password,\n          input: {\n            name: \"password\",\n            type: \"password\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          margin: 3,\n          disabled: !validEmpId || !validPw,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffLoginForm, \"N9DW8Igar3M1aP+hSCHUZbdhDh8=\");\n_c = StaffLoginForm;\nexport default StaffLoginForm;\nvar _c;\n$RefreshReg$(_c, \"StaffLoginForm\");","map":{"version":3,"names":["React","useState","jq","Main","Fieldset","InputField","Button","jsxDEV","_jsxDEV","StaffLoginForm","_s","empId","setEmpId","password","setPassword","validEmpId","setValidEmpId","validPw","setValidPw","empIdHandler","e","input","target","value","regex","test","length","submitFormHandler","preventDefault","ajax","url","type","data","dataType","success","response","console","error","userType","log","pwHandler","children","onSubmit","Legend","size","fileName","_jsxFileName","lineNumber","columnNumber","padding","onChange","name","margin","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/StaffLoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n//import { useNavigate } from \"react-router-dom\";\r\nimport jq from \"jquery\";\r\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\r\n\r\nfunction StaffLoginForm() {\r\n  //const navigate = useNavigate();\r\n\r\n  const [empId, setEmpId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [validEmpId, setValidEmpId] = useState(false);\r\n  const [validPw, setValidPw] = useState(false);\r\n\r\n  const empIdHandler = (e) => {\r\n    let input = e.target.value;\r\n    const regex = /^[0-9]+$/;\r\n\r\n    if (regex.test(input) && input.length > 3) {\r\n      setEmpId(input);\r\n      setValidEmpId(true);\r\n    } else {\r\n      setValidEmpId(false);\r\n    }\r\n  };\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Retrieve data from db\r\n    jq.ajax({\r\n      url: \"http://localhost:4000/stafflogindata.php\",\r\n      type: \"POST\",\r\n      data: {\r\n        empId: empId,\r\n        password: password,\r\n      },\r\n      dataType: \"json\",\r\n      success: function (response) {\r\n        if (response === \"no users\") {\r\n          console.error(\"No users found.\");\r\n        } else {\r\n          let userType = response[0]\r\n\r\n          //navigate(\"/\");\r\n        }\r\n      },\r\n      error: function (error) {\r\n        console.log(error);\r\n        // handle error here\r\n      },\r\n    });\r\n  };\r\n\r\n  const pwHandler = (e) => {\r\n    let input = e.target.value;\r\n    setPassword(input);\r\n    if (input.length > 0) {\r\n      setValidPw(true);\r\n    } else {\r\n      setValidPw(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Main>\r\n      <form  onSubmit={submitFormHandler}>\r\n        <Fieldset>\r\n          <Fieldset.Legend size=\"LARGE\">Staff Login</Fieldset.Legend>\r\n          <InputField\r\n            padding={3}\r\n            onChange={empIdHandler}\r\n            value={empId}\r\n            input={{\r\n              name: \"empId\",\r\n              type: \"text\",\r\n            }}\r\n          >\r\n            Username\r\n          </InputField>\r\n          <InputField\r\n            padding={3}\r\n            onChange={pwHandler}\r\n            value={password}\r\n            input={{\r\n              name: \"password\",\r\n              type: \"password\",\r\n            }}\r\n          >\r\n            Password\r\n          </InputField>\r\n          <Button type=\"submit\" margin={3} disabled={!validEmpId || !validPw}>\r\n            Continue\r\n          </Button>\r\n        </Fieldset>\r\n      </form>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default StaffLoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}