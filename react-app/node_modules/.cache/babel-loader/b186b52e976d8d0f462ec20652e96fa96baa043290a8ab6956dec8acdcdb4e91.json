{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\ProfileChanges\\\\AddressChange\\\\AddressChangeEnter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { InputField, Main, Button, SectionBreak } from \"govuk-react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Navigation from \"../../../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddressChangeEnter() {\n  _s();\n  const navigate = useNavigate();\n  const [address, setAddress] = useState(\"\");\n  const location = useLocation();\n  console.log(location.state);\n  useEffect(() => {\n    const title = 'Address Change';\n    document.title = title;\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    const postcodeRegex = /^(?:(?:[A-Za-z][A-Ha-hJ-Yj-y]?\\d[A-Za-z\\d]? ?\\d[A-Za-z]{2})|(?:GIR ?0A{2}))$/;\n    if (postcodeRegex.test(address)) {\n      navigate(\"/AddressChangeConfirmation\", {\n        state: {\n          address: address.toUpperCase()\n        }\n      });\n      console.log(address);\n    } else {\n      alert(\"Please enter a valid UK postcode in the format LN NLL or LLN NLL, where L is a letter and N is a number.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      pageLink1: \"/\",\n      PageName1: \"home\",\n      pageLink2: \"/login\",\n      PageName2: \"Login\",\n      pageLink3: \"/NhsNumber\",\n      PageName3: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          hint: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"You'll find this on the last line on your address\"\n          }, void 0, false),\n          input: {\n            name: \"newAddress\"\n          },\n          meta: {\n            touched: true\n          },\n          children: \"Your new postcode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {\n          level: \"SMALL\",\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/Profile\"),\n          buttonColour: \"GREY\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AddressChangeEnter, \"17NsOmwGCkAvNGuZTkG0vqnk47s=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddressChangeEnter;\nexport default AddressChangeEnter;\nvar _c;\n$RefreshReg$(_c, \"AddressChangeEnter\");","map":{"version":3,"names":["React","useEffect","useState","InputField","Main","Button","SectionBreak","useLocation","useNavigate","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","AddressChangeEnter","_s","navigate","address","setAddress","location","console","log","state","title","document","handleSubmit","e","preventDefault","postcodeRegex","test","toUpperCase","alert","children","pageLink1","PageName1","pageLink2","PageName2","pageLink3","PageName3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","hint","input","name","meta","touched","level","visible","onClick","buttonColour","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/ProfileChanges/AddressChange/AddressChangeEnter.js"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { InputField, Main, Button, SectionBreak } from \"govuk-react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Navigation from \"../../../Navigation\";\r\n\r\nfunction AddressChangeEnter() {\r\n\r\n  const navigate = useNavigate();\r\n  const [address, setAddress] = useState(\"\");\r\n  const location = useLocation();\r\n  \r\n  console.log(location.state);\r\n\r\n    useEffect(() => {\r\n        const title = 'Address Change';\r\n        document.title = title;\r\n  })\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postcodeRegex = /^(?:(?:[A-Za-z][A-Ha-hJ-Yj-y]?\\d[A-Za-z\\d]? ?\\d[A-Za-z]{2})|(?:GIR ?0A{2}))$/;\r\n    if (postcodeRegex.test(address)) {\r\n      navigate(\"/AddressChangeConfirmation\", { state: { address: address.toUpperCase() } });\r\n      console.log(address);\r\n    } else {\r\n      alert(\"Please enter a valid UK postcode in the format LN NLL or LLN NLL, where L is a letter and N is a number.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        pageLink1=\"/\"\r\n        PageName1=\"home\"\r\n        pageLink2=\"/login\"\r\n        PageName2=\"Login\"\r\n        pageLink3=\"/NhsNumber\"\r\n        PageName3=\"Register\"\r\n      />\r\n\r\n      <Main>\r\n        <form onSubmit={handleSubmit}>\r\n          <InputField\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            hint={<>You'll find this on the last line on your address</>}\r\n            input={{ name: \"newAddress\" }}\r\n            meta={{\r\n              touched: true,\r\n            }}\r\n          >\r\n            Your new postcode:\r\n          </InputField>\r\n\r\n          <Button>\r\n            Continue\r\n          </Button>\r\n\r\n          <SectionBreak level=\"SMALL\" visible={false} />\r\n\r\n          <Button\r\n            onClick={() => navigate(\"/Profile\")}\r\n            buttonColour=\"GREY\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </form>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddressChangeEnter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}