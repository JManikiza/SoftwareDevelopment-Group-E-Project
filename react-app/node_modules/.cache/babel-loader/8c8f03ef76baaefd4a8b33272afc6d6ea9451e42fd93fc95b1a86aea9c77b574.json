{"ast":null,"code":"'use strict';\n\nvar fromCharCode = require('../constant/from-char-code.js');\nfunction serializeChunks(chunks) {\n  var index = -1;\n  var result = [];\n  var chunk;\n  var value;\n  var atTab;\n  while (++index < chunks.length) {\n    chunk = chunks[index];\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else if (chunk === -5) {\n      value = '\\r';\n    } else if (chunk === -4) {\n      value = '\\n';\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n';\n    } else if (chunk === -2) {\n      value = '\\t';\n    } else if (chunk === -1) {\n      if (atTab) continue;\n      value = ' ';\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk);\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}\nmodule.exports = serializeChunks;","map":{"version":3,"names":["fromCharCode","require","serializeChunks","chunks","index","result","chunk","value","atTab","length","push","join","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/util/serialize-chunks.js"],"sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAE3D,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK;EACT,IAAIC,KAAK;EACT,IAAIC,KAAK;EAET,OAAO,EAAEJ,KAAK,GAAGD,MAAM,CAACM,MAAM,EAAE;IAC9BH,KAAK,GAAGH,MAAM,CAACC,KAAK,CAAC;IAErB,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;MAC7BC,KAAK,GAAGD,KAAK;IACf,CAAC,MAAM,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;MACvBC,KAAK,GAAG,IAAI;IACd,CAAC,MAAM,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;MACvBC,KAAK,GAAG,IAAI;IACd,CAAC,MAAM,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;MACvBC,KAAK,GAAG,IAAI,GAAG,IAAI;IACrB,CAAC,MAAM,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;MACvBC,KAAK,GAAG,IAAI;IACd,CAAC,MAAM,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;MACvB,IAAIE,KAAK,EAAE;MACXD,KAAK,GAAG,GAAG;IACb,CAAC,MAAM;MACL;MACAA,KAAK,GAAGP,YAAY,CAACM,KAAK,CAAC;IAC7B;IAEAE,KAAK,GAAGF,KAAK,KAAK,CAAC,CAAC;IACpBD,MAAM,CAACK,IAAI,CAACH,KAAK,CAAC;EACpB;EAEA,OAAOF,MAAM,CAACM,IAAI,CAAC,EAAE,CAAC;AACxB;AAEAC,MAAM,CAACC,OAAO,GAAGX,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}