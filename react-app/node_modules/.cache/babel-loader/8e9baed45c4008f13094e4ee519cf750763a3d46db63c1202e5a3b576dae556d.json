{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar shallow = require('../util/shallow.js');\nvar factorySpace = require('./factory-space.js');\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length;\n  var content;\n  var text;\n  var definition;\n  var heading; // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index;\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index;\n      }\n    }\n  }\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }; // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText'; // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = shallow(events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context]);\n  return events;\n}\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this;\n  var index = self.events.length;\n  var marker;\n  var paragraph; // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (self.events[index][1].type !== 'lineEnding' && self.events[index][1].type !== 'linePrefix' && self.events[index][1].type !== 'content') {\n      paragraph = self.events[index][1].type === 'paragraph';\n      break;\n    }\n  }\n  return start;\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine');\n      effects.enter('setextHeadingLineSequence');\n      marker = code;\n      return closingSequence(code);\n    }\n    return nok(code);\n  }\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return closingSequence;\n    }\n    effects.exit('setextHeadingLineSequence');\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code);\n  }\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\nmodule.exports = setextUnderline;","map":{"version":3,"names":["markdownLineEnding","require","shallow","factorySpace","setextUnderline","name","tokenize","tokenizeSetextUnderline","resolveTo","resolveToSetextUnderline","events","context","index","length","content","text","definition","heading","type","splice","start","end","push","effects","ok","nok","self","marker","paragraph","code","lazy","interrupt","enter","closingSequence","consume","exit","closingSequenceEnd","module","exports"],"sources":["C:/Users/Mo/Desktop/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/setext-underline.js"],"sourcesContent":["'use strict'\r\n\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\nvar shallow = require('../util/shallow.js')\r\nvar factorySpace = require('./factory-space.js')\r\n\r\nvar setextUnderline = {\r\n  name: 'setextUnderline',\r\n  tokenize: tokenizeSetextUnderline,\r\n  resolveTo: resolveToSetextUnderline\r\n}\r\n\r\nfunction resolveToSetextUnderline(events, context) {\r\n  var index = events.length\r\n  var content\r\n  var text\r\n  var definition\r\n  var heading // Find the opening of the content.\r\n  // It’ll always exist: we don’t tokenize if it isn’t there.\r\n\r\n  while (index--) {\r\n    if (events[index][0] === 'enter') {\r\n      if (events[index][1].type === 'content') {\r\n        content = index\r\n        break\r\n      }\r\n\r\n      if (events[index][1].type === 'paragraph') {\r\n        text = index\r\n      }\r\n    } // Exit\r\n    else {\r\n      if (events[index][1].type === 'content') {\r\n        // Remove the content end (if needed we’ll add it later)\r\n        events.splice(index, 1)\r\n      }\r\n\r\n      if (!definition && events[index][1].type === 'definition') {\r\n        definition = index\r\n      }\r\n    }\r\n  }\r\n\r\n  heading = {\r\n    type: 'setextHeading',\r\n    start: shallow(events[text][1].start),\r\n    end: shallow(events[events.length - 1][1].end)\r\n  } // Change the paragraph to setext heading text.\r\n\r\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\r\n  // but we need move it.\r\n\r\n  if (definition) {\r\n    events.splice(text, 0, ['enter', heading, context])\r\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\r\n    events[content][1].end = shallow(events[definition][1].end)\r\n  } else {\r\n    events[content][1] = heading\r\n  } // Add the heading exit at the end.\r\n\r\n  events.push(['exit', heading, context])\r\n  return events\r\n}\r\n\r\nfunction tokenizeSetextUnderline(effects, ok, nok) {\r\n  var self = this\r\n  var index = self.events.length\r\n  var marker\r\n  var paragraph // Find an opening.\r\n\r\n  while (index--) {\r\n    // Skip enter/exit of line ending, line prefix, and content.\r\n    // We can now either have a definition or a paragraph.\r\n    if (\r\n      self.events[index][1].type !== 'lineEnding' &&\r\n      self.events[index][1].type !== 'linePrefix' &&\r\n      self.events[index][1].type !== 'content'\r\n    ) {\r\n      paragraph = self.events[index][1].type === 'paragraph'\r\n      break\r\n    }\r\n  }\r\n\r\n  return start\r\n\r\n  function start(code) {\r\n    if (!self.lazy && (self.interrupt || paragraph)) {\r\n      effects.enter('setextHeadingLine')\r\n      effects.enter('setextHeadingLineSequence')\r\n      marker = code\r\n      return closingSequence(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function closingSequence(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      return closingSequence\r\n    }\r\n\r\n    effects.exit('setextHeadingLineSequence')\r\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\r\n  }\r\n\r\n  function closingSequenceEnd(code) {\r\n    if (code === null || markdownLineEnding(code)) {\r\n      effects.exit('setextHeadingLine')\r\n      return ok(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n\r\nmodule.exports = setextUnderline\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}