{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\ProfileChanges\\\\DOBChanges\\\\DOBChangeEnter.js\",\n  _s = $RefreshSig$();\n/**\r\n* Author(s) of this code: \r\n*\r\n* Joven Manikiza\r\n*/\n\nimport React, { useState } from \"react\";\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../../../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DOBChangeEnter() {\n  _s();\n  const navigate = useNavigate();\n  const [dob, setDOB] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"value:\", dob);\n    // Check that all three values are present\n    if (dob && dob.day && dob.month && dob.year) {\n      console.log(\"dob before processing:\", dob);\n\n      // Convert the three values into a Date object\n      const dateObject = new Date(parseInt(dob.year, 10),\n      // Year\n      parseInt(dob.month, 10) - 1,\n      // Month (subtract 1 since Date() is 0-indexed)\n      parseInt(dob.day, 10) // Day\n      );\n\n      console.log(\"dateObject:\", dateObject);\n\n      // Format the date as a string and pass it to the next page\n      const formattedDOB = `${dateObject.getDate()}/${dateObject.getMonth() + 1}/${dateObject.getFullYear()}`;\n      navigate(\"/DOBChangeConfirmation\", {\n        state: {\n          dob: formattedDOB\n        }\n      });\n    } else {\n      alert(\"Please enter a valid date of birth.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      pageLink1: \"/\",\n      PageName1: \"home\",\n      pageLink2: \"/login\",\n      PageName2: \"Login\",\n      pageLink3: \"/NhsNumber\",\n      PageName3: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DateField, {\n          hintText: \"For example, 31\",\n          input: {\n            name: \"day\",\n            onChange: value => setDOB({\n              ...dob,\n              day: value.target.value\n            })\n          },\n          meta: {\n            touched: true,\n            error: !(dob !== null && dob !== void 0 && dob.day) ? \"Please enter a valid day.\" : undefined\n          },\n          children: \"What day were you born on?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateField, {\n          hintText: \"For example, 03\",\n          input: {\n            name: \"month\",\n            onChange: value => setDOB({\n              ...dob,\n              month: value.target.value\n            })\n          },\n          meta: {\n            touched: true,\n            error: !(dob !== null && dob !== void 0 && dob.month) ? \"Please enter a valid month.\" : undefined\n          },\n          children: \"What month were you born in?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateField, {\n          hintText: \"For example, 1980\",\n          input: {\n            name: \"year\",\n            onChange: value => setDOB({\n              ...dob,\n              year: value.target.value\n            })\n          },\n          meta: {\n            touched: true,\n            error: !(dob !== null && dob !== void 0 && dob.year) ? \"Please enter a valid year.\" : undefined\n          },\n          children: \"What year were you born in?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {\n          level: \"SMALL\",\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/Profile\"),\n          buttonColour: \"GREY\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(DOBChangeEnter, \"0X4yzDQey3JLrlh4X/UqYcu6UKA=\", false, function () {\n  return [useNavigate];\n});\n_c = DOBChangeEnter;\nexport default DOBChangeEnter;\nvar _c;\n$RefreshReg$(_c, \"DOBChangeEnter\");","map":{"version":3,"names":["React","useState","DateField","Main","Button","SectionBreak","useNavigate","Navigation","jsxDEV","_jsxDEV","DOBChangeEnter","_s","navigate","dob","setDOB","handleSubmit","e","preventDefault","console","log","day","month","year","dateObject","Date","parseInt","formattedDOB","getDate","getMonth","getFullYear","state","alert","children","pageLink1","PageName1","pageLink2","PageName2","pageLink3","PageName3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","hintText","input","name","onChange","value","target","meta","touched","error","undefined","level","visible","onClick","buttonColour","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/ProfileChanges/DOBChanges/DOBChangeEnter.js"],"sourcesContent":["/**\r\n* Author(s) of this code: \r\n*\r\n* Joven Manikiza\r\n*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navigation from \"../../../Navigation\";\r\n\r\nfunction DOBChangeEnter(){\r\n\r\n    const navigate = useNavigate();\r\n    const [dob, setDOB] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"value:\", dob);\r\n        // Check that all three values are present\r\n        if (dob && dob.day && dob.month && dob.year) {\r\n            console.log(\"dob before processing:\", dob);\r\n\r\n            // Convert the three values into a Date object\r\n            const dateObject = new Date(\r\n                parseInt(dob.year, 10), // Year\r\n                parseInt(dob.month, 10) - 1, // Month (subtract 1 since Date() is 0-indexed)\r\n                parseInt(dob.day, 10) // Day\r\n            );\r\n            console.log(\"dateObject:\", dateObject);\r\n\r\n            // Format the date as a string and pass it to the next page\r\n            const formattedDOB = `${dateObject.getDate()}/${dateObject.getMonth() + 1}/${dateObject.getFullYear()}`;\r\n            navigate(\"/DOBChangeConfirmation\", { state: { dob: formattedDOB } });\r\n        } else {\r\n            alert(\"Please enter a valid date of birth.\");\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <Navigation pageLink1=\"/\" PageName1=\"home\" pageLink2=\"/login\" PageName2=\"Login\" pageLink3=\"/NhsNumber\" PageName3=\"Register\"/>\r\n\r\n            <Main>\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <DateField\r\n                        hintText=\"For example, 31\"\r\n                        input={{\r\n                          name: \"day\",\r\n                          onChange: (value) => setDOB({...dob, day: value.target.value}),\r\n                        }}\r\n                        meta={{\r\n                          touched: true,\r\n                          error: !dob?.day ? \"Please enter a valid day.\" : undefined,\r\n                        }}\r\n                    >\r\n                        What day were you born on?\r\n                    </DateField>\r\n\r\n                    <DateField\r\n                        hintText=\"For example, 03\"\r\n                        input={{\r\n                          name: \"month\",\r\n                          onChange: (value) => setDOB({...dob, month: value.target.value}),\r\n                        }}\r\n                        meta={{\r\n                          touched: true,\r\n                          error: !dob?.month ? \"Please enter a valid month.\" : undefined,\r\n                        }}\r\n                    >\r\n                        What month were you born in?\r\n                    </DateField>\r\n\r\n                    <DateField\r\n                        hintText=\"For example, 1980\"\r\n                        input={{\r\n                          name: \"year\",\r\n                          onChange: (value) => setDOB({...dob, year: value.target.value}),\r\n                        }}\r\n                        meta={{\r\n                          touched: true,\r\n                          error: !dob?.year ? \"Please enter a valid year.\" : undefined,\r\n                        }}\r\n                    >\r\n                        What year were you born in?\r\n                    </DateField>\r\n\r\n                    <Button>\r\n                        Continue\r\n                    </Button>\r\n\r\n                    <SectionBreak level=\"SMALL\" visible={false}/>\r\n                    \r\n                    <Button onClick={() => navigate(\"/Profile\")} buttonColour=\"GREY\">\r\n                        Cancel\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </Main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DOBChangeEnter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}