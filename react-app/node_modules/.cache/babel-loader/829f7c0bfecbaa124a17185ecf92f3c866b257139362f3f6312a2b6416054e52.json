{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar factorySpace = require('../tokenize/factory-space.js');\nvar tokenize = initializeContent;\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  var previous;\n  return contentStart;\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, contentStart, 'linePrefix');\n  }\n  function paragraphInitial(code) {\n    effects.enter('paragraph');\n    return lineStart(code);\n  }\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText');\n      effects.exit('paragraph');\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit('chunkText');\n      return lineStart;\n    } // Data.\n\n    effects.consume(code);\n    return data;\n  }\n}\nexports.tokenize = tokenize;","map":{"version":3,"names":["Object","defineProperty","exports","value","markdownLineEnding","require","factorySpace","tokenize","initializeContent","effects","contentStart","attempt","parser","constructs","contentInitial","afterContentStartConstruct","paragraphInitial","previous","code","consume","enter","exit","lineStart","token","contentType","next","data"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/initialize/content.js"],"sourcesContent":["'use strict'\r\n\r\nObject.defineProperty(exports, '__esModule', {value: true})\r\n\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\nvar factorySpace = require('../tokenize/factory-space.js')\r\n\r\nvar tokenize = initializeContent\r\n\r\nfunction initializeContent(effects) {\r\n  var contentStart = effects.attempt(\r\n    this.parser.constructs.contentInitial,\r\n    afterContentStartConstruct,\r\n    paragraphInitial\r\n  )\r\n  var previous\r\n  return contentStart\r\n\r\n  function afterContentStartConstruct(code) {\r\n    if (code === null) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter('lineEnding')\r\n    effects.consume(code)\r\n    effects.exit('lineEnding')\r\n    return factorySpace(effects, contentStart, 'linePrefix')\r\n  }\r\n\r\n  function paragraphInitial(code) {\r\n    effects.enter('paragraph')\r\n    return lineStart(code)\r\n  }\r\n\r\n  function lineStart(code) {\r\n    var token = effects.enter('chunkText', {\r\n      contentType: 'text',\r\n      previous: previous\r\n    })\r\n\r\n    if (previous) {\r\n      previous.next = token\r\n    }\r\n\r\n    previous = token\r\n    return data(code)\r\n  }\r\n\r\n  function data(code) {\r\n    if (code === null) {\r\n      effects.exit('chunkText')\r\n      effects.exit('paragraph')\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      effects.consume(code)\r\n      effects.exit('chunkText')\r\n      return lineStart\r\n    } // Data.\r\n\r\n    effects.consume(code)\r\n    return data\r\n  }\r\n}\r\n\r\nexports.tokenize = tokenize\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAACC,KAAK,EAAE;AAAI,CAAC,CAAC;AAE3D,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,sCAAsC,CAAC;AACxE,IAAIC,YAAY,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAE1D,IAAIE,QAAQ,GAAGC,iBAAiB;AAEhC,SAASA,iBAAiBA,CAACC,OAAO,EAAE;EAClC,IAAIC,YAAY,GAAGD,OAAO,CAACE,OAAO,CAChC,IAAI,CAACC,MAAM,CAACC,UAAU,CAACC,cAAc,EACrCC,0BAA0B,EAC1BC,gBAAgB,CACjB;EACD,IAAIC,QAAQ;EACZ,OAAOP,YAAY;EAEnB,SAASK,0BAA0BA,CAACG,IAAI,EAAE;IACxC,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBT,OAAO,CAACU,OAAO,CAACD,IAAI,CAAC;MACrB;IACF;IAEAT,OAAO,CAACW,KAAK,CAAC,YAAY,CAAC;IAC3BX,OAAO,CAACU,OAAO,CAACD,IAAI,CAAC;IACrBT,OAAO,CAACY,IAAI,CAAC,YAAY,CAAC;IAC1B,OAAOf,YAAY,CAACG,OAAO,EAAEC,YAAY,EAAE,YAAY,CAAC;EAC1D;EAEA,SAASM,gBAAgBA,CAACE,IAAI,EAAE;IAC9BT,OAAO,CAACW,KAAK,CAAC,WAAW,CAAC;IAC1B,OAAOE,SAAS,CAACJ,IAAI,CAAC;EACxB;EAEA,SAASI,SAASA,CAACJ,IAAI,EAAE;IACvB,IAAIK,KAAK,GAAGd,OAAO,CAACW,KAAK,CAAC,WAAW,EAAE;MACrCI,WAAW,EAAE,MAAM;MACnBP,QAAQ,EAAEA;IACZ,CAAC,CAAC;IAEF,IAAIA,QAAQ,EAAE;MACZA,QAAQ,CAACQ,IAAI,GAAGF,KAAK;IACvB;IAEAN,QAAQ,GAAGM,KAAK;IAChB,OAAOG,IAAI,CAACR,IAAI,CAAC;EACnB;EAEA,SAASQ,IAAIA,CAACR,IAAI,EAAE;IAClB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBT,OAAO,CAACY,IAAI,CAAC,WAAW,CAAC;MACzBZ,OAAO,CAACY,IAAI,CAAC,WAAW,CAAC;MACzBZ,OAAO,CAACU,OAAO,CAACD,IAAI,CAAC;MACrB;IACF;IAEA,IAAId,kBAAkB,CAACc,IAAI,CAAC,EAAE;MAC5BT,OAAO,CAACU,OAAO,CAACD,IAAI,CAAC;MACrBT,OAAO,CAACY,IAAI,CAAC,WAAW,CAAC;MACzB,OAAOC,SAAS;IAClB,CAAC,CAAC;;IAEFb,OAAO,CAACU,OAAO,CAACD,IAAI,CAAC;IACrB,OAAOQ,IAAI;EACb;AACF;AAEAxB,OAAO,CAACK,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}