{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar content = require('../tokenize/content.js');\nvar factorySpace = require('../tokenize/factory-space.js');\nvar partialBlankLine = require('../tokenize/partial-blank-line.js');\nvar tokenize = initializeFlow;\nfunction initializeFlow(effects) {\n  var self = this;\n  var initial = effects.attempt(\n  // Try to parse a blank line.\n  partialBlankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), 'linePrefix')));\n  return initial;\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}\nexports.tokenize = tokenize;","map":{"version":3,"names":["Object","defineProperty","exports","value","content","require","factorySpace","partialBlankLine","tokenize","initializeFlow","effects","self","initial","attempt","atBlankEnding","parser","constructs","flowInitial","afterConstruct","flow","code","consume","enter","exit","currentConstruct","undefined"],"sources":["C:/Users/wally/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/initialize/flow.js"],"sourcesContent":["'use strict'\r\n\r\nObject.defineProperty(exports, '__esModule', {value: true})\r\n\r\nvar content = require('../tokenize/content.js')\r\nvar factorySpace = require('../tokenize/factory-space.js')\r\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\r\n\r\nvar tokenize = initializeFlow\r\n\r\nfunction initializeFlow(effects) {\r\n  var self = this\r\n  var initial = effects.attempt(\r\n    // Try to parse a blank line.\r\n    partialBlankLine,\r\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\r\n    effects.attempt(\r\n      this.parser.constructs.flowInitial,\r\n      afterConstruct,\r\n      factorySpace(\r\n        effects,\r\n        effects.attempt(\r\n          this.parser.constructs.flow,\r\n          afterConstruct,\r\n          effects.attempt(content, afterConstruct)\r\n        ),\r\n        'linePrefix'\r\n      )\r\n    )\r\n  )\r\n  return initial\r\n\r\n  function atBlankEnding(code) {\r\n    if (code === null) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter('lineEndingBlank')\r\n    effects.consume(code)\r\n    effects.exit('lineEndingBlank')\r\n    self.currentConstruct = undefined\r\n    return initial\r\n  }\r\n\r\n  function afterConstruct(code) {\r\n    if (code === null) {\r\n      effects.consume(code)\r\n      return\r\n    }\r\n\r\n    effects.enter('lineEnding')\r\n    effects.consume(code)\r\n    effects.exit('lineEnding')\r\n    self.currentConstruct = undefined\r\n    return initial\r\n  }\r\n}\r\n\r\nexports.tokenize = tokenize\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAACC,KAAK,EAAE;AAAI,CAAC,CAAC;AAE3D,IAAIC,OAAO,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC/C,IAAIC,YAAY,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAC1D,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AAEnE,IAAIG,QAAQ,GAAGC,cAAc;AAE7B,SAASA,cAAcA,CAACC,OAAO,EAAE;EAC/B,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,OAAO,GAAGF,OAAO,CAACG,OAAO;EAC3B;EACAN,gBAAgB,EAChBO,aAAa;EAAE;EACfJ,OAAO,CAACG,OAAO,CACb,IAAI,CAACE,MAAM,CAACC,UAAU,CAACC,WAAW,EAClCC,cAAc,EACdZ,YAAY,CACVI,OAAO,EACPA,OAAO,CAACG,OAAO,CACb,IAAI,CAACE,MAAM,CAACC,UAAU,CAACG,IAAI,EAC3BD,cAAc,EACdR,OAAO,CAACG,OAAO,CAACT,OAAO,EAAEc,cAAc,CAAC,CACzC,EACD,YAAY,CACb,CACF,CACF;EACD,OAAON,OAAO;EAEd,SAASE,aAAaA,CAACM,IAAI,EAAE;IAC3B,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBV,OAAO,CAACW,OAAO,CAACD,IAAI,CAAC;MACrB;IACF;IAEAV,OAAO,CAACY,KAAK,CAAC,iBAAiB,CAAC;IAChCZ,OAAO,CAACW,OAAO,CAACD,IAAI,CAAC;IACrBV,OAAO,CAACa,IAAI,CAAC,iBAAiB,CAAC;IAC/BZ,IAAI,CAACa,gBAAgB,GAAGC,SAAS;IACjC,OAAOb,OAAO;EAChB;EAEA,SAASM,cAAcA,CAACE,IAAI,EAAE;IAC5B,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBV,OAAO,CAACW,OAAO,CAACD,IAAI,CAAC;MACrB;IACF;IAEAV,OAAO,CAACY,KAAK,CAAC,YAAY,CAAC;IAC3BZ,OAAO,CAACW,OAAO,CAACD,IAAI,CAAC;IACrBV,OAAO,CAACa,IAAI,CAAC,YAAY,CAAC;IAC1BZ,IAAI,CAACa,gBAAgB,GAAGC,SAAS;IACjC,OAAOb,OAAO;EAChB;AACF;AAEAV,OAAO,CAACM,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}