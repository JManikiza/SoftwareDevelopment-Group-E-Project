{"ast":null,"code":"'use strict';\n\nvar search = /[\\0\\t\\n\\r]/g;\nfunction preprocess() {\n  var start = true;\n  var column = 1;\n  var buffer = '';\n  var atCarriageReturn;\n  return preprocessor;\n  function preprocessor(value, encoding, end) {\n    var chunks = [];\n    var match;\n    var next;\n    var startPosition;\n    var endPosition;\n    var code;\n    value = buffer + value.toString(encoding);\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        if (code === 0) {\n          chunks.push(65533);\n          column++;\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4;\n          chunks.push(-2);\n          while (column++ < next) chunks.push(-1);\n        } else if (code === 10) {\n          chunks.push(-4);\n          column = 1;\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true;\n          column = 1;\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}\nmodule.exports = preprocess;","map":{"version":3,"names":["search","preprocess","start","column","buffer","atCarriageReturn","preprocessor","value","encoding","end","chunks","match","next","startPosition","endPosition","code","toString","charCodeAt","undefined","length","lastIndex","exec","index","slice","push","Math","ceil","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/preprocess.js"],"sourcesContent":["'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}