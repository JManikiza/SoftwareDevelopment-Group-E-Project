{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\GPComponents\\\\BookAppointment\\\\BookTab.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { H2, Button, ButtonArrow, DateField, MultiChoice, Radio, Select } from \"govuk-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookTab() {\n  _s();\n  const [selectedDate, setSelectedDate] = React.useState({});\n  const [selectedTime, setSelectedTime] = React.useState(\"\");\n  const [selectedDoctor, setSelectedDoctor] = React.useState(\"\");\n  const [isInputFilled, setIsInputFilled] = React.useState(false);\n  const navigate = useNavigate();\n  function handleDateChange(dateValue) {\n    setSelectedDate(dateValue);\n    updateIsInputFilled();\n  }\n  function handleTimeChange(event) {\n    setSelectedTime(event.target.value);\n    updateIsInputFilled();\n  }\n  function handleDoctorChange(event) {\n    setSelectedDoctor(event.target.value);\n    updateIsInputFilled();\n  }\n  function handleButtonClick() {\n    if (selectedDate !== \"\" && selectedTime !== \"\" && selectedDoctor !== \"\") {\n      setIsInputFilled(true);\n      navigate(\"/BookConfirm\");\n    } else {\n      setIsInputFilled(false);\n      alert(\"Please fill all the required fields.\");\n    }\n  }\n  function updateIsInputFilled() {\n    if (selectedDate !== \"\" && selectedTime !== \"\" && selectedDoctor !== \"\") {\n      setIsInputFilled(true);\n    } else {\n      setIsInputFilled(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(H2, {\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateField, {\n      input: {\n        value: selectedDate,\n        name: \"date\"\n      },\n      onChange: event => handleDateChange(event.target.value),\n      children: \"What date would you like to book the appointment for?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiChoice, {\n      label: \"What time of day works for you?\",\n      hint: \"We will try our best to accommodate your needs\",\n      children: [/*#__PURE__*/_jsxDEV(Radio, {\n        value: \"Morning\",\n        checked: selectedTime === \"Morning\",\n        onChange: handleTimeChange,\n        children: \"Morning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        value: \"Noon\",\n        checked: selectedTime === \"Noon\",\n        onChange: handleTimeChange,\n        children: \"Noon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        value: \"Afternoon\",\n        checked: selectedTime === \"Afternoon\",\n        onChange: handleTimeChange,\n        children: \"Afternoon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      input: {\n        onChange: handleDoctorChange,\n        value: selectedDoctor,\n        name: \"doctor\"\n      },\n      label: \"Which doctor would you prefer?\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"GOV.UK elements option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"GOV.UK elements option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"GOV.UK elements option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate(\"/BookConfirm\", {\n        selectedDate,\n        selectedTime,\n        selectedDoctor\n      }),\n      icon: /*#__PURE__*/_jsxDEV(ButtonArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this),\n      start: true,\n      disabled: !isInputFilled,\n      children: \"Book now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(BookTab, \"uY2bgEF8MK9zhqZoIzDqbgyHLTg=\", false, function () {\n  return [useNavigate];\n});\n_c = BookTab;\nexport default BookTab;\nvar _c;\n$RefreshReg$(_c, \"BookTab\");","map":{"version":3,"names":["useState","H2","Button","ButtonArrow","DateField","MultiChoice","Radio","Select","useNavigate","jsxDEV","_jsxDEV","BookTab","_s","selectedDate","setSelectedDate","React","selectedTime","setSelectedTime","selectedDoctor","setSelectedDoctor","isInputFilled","setIsInputFilled","navigate","handleDateChange","dateValue","updateIsInputFilled","handleTimeChange","event","target","value","handleDoctorChange","handleButtonClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","input","name","onChange","label","hint","checked","onClick","icon","start","disabled","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/GPComponents/BookAppointment/BookTab.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { H2, Button, ButtonArrow, DateField, MultiChoice, Radio, Select } from \"govuk-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction BookTab() {\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState({});\r\n  const [selectedTime, setSelectedTime] = React.useState(\"\");\r\n  const [selectedDoctor, setSelectedDoctor] = React.useState(\"\");\r\n  const [isInputFilled, setIsInputFilled] = React.useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  function handleDateChange(dateValue) {\r\n    setSelectedDate(dateValue);\r\n    updateIsInputFilled();\r\n  }\r\n\r\n  function handleTimeChange(event) {\r\n    setSelectedTime(event.target.value);\r\n    updateIsInputFilled();\r\n  }\r\n\r\n  function handleDoctorChange(event) {\r\n    setSelectedDoctor(event.target.value);\r\n    updateIsInputFilled();\r\n  }\r\n\r\n  function handleButtonClick() {\r\n    if (selectedDate !== \"\" && selectedTime !== \"\" && selectedDoctor !== \"\") {\r\n      setIsInputFilled(true);\r\n      navigate(\"/BookConfirm\");\r\n    } else {\r\n      setIsInputFilled(false);\r\n      alert(\"Please fill all the required fields.\");\r\n    }\r\n  }\r\n\r\n  function updateIsInputFilled() {\r\n    if (selectedDate !== \"\" && selectedTime !== \"\" && selectedDoctor !== \"\") {\r\n      setIsInputFilled(true);\r\n    } else {\r\n      setIsInputFilled(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n  \r\n    <div>\r\n      <br />\r\n      <H2>Book Appointment</H2>\r\n      <DateField\r\n        input={{ value: selectedDate, name: \"date\" }}\r\n        onChange={(event) => handleDateChange(event.target.value)}\r\n      >\r\n        What date would you like to book the appointment for?\r\n      </DateField>\r\n      <br />\r\n      <MultiChoice\r\n        label=\"What time of day works for you?\"\r\n        hint=\"We will try our best to accommodate your needs\"\r\n      >\r\n         <Radio value=\"Morning\" checked={selectedTime === \"Morning\"} onChange={handleTimeChange}>\r\n          Morning\r\n        </Radio>\r\n        <Radio value=\"Noon\" checked={selectedTime === \"Noon\"} onChange={handleTimeChange}>\r\n          Noon\r\n        </Radio>\r\n        <Radio value=\"Afternoon\" checked={selectedTime === \"Afternoon\"} onChange={handleTimeChange}>\r\n          Afternoon\r\n        </Radio>\r\n      </MultiChoice>\r\n      <br />\r\n      <Select\r\n        input={{ onChange: handleDoctorChange, value: selectedDoctor, name: \"doctor\" }}\r\n        label=\"Which doctor would you prefer?\"\r\n      >\r\n        <option value=\"\">Select an option</option>\r\n        <option value=\"0\">GOV.UK elements option 1</option>\r\n        <option value=\"1\">GOV.UK elements option 2</option>\r\n        <option value=\"2\">GOV.UK elements option 3</option>\r\n      </Select>\r\n      <br />\r\n<Button onClick={() => navigate(\"/BookConfirm\", { selectedDate, selectedTime, selectedDoctor })}\r\n        icon={<ButtonArrow />}\r\n        start\r\n        disabled={!isInputFilled}>\r\n  Book now\r\n</Button>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default BookTab;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}