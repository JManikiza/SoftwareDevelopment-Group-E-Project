{"ast":null,"code":"'use strict';\n\nvar hasOwnProperty = require('../constant/has-own-property.js');\nvar chunkedSplice = require('./chunked-splice.js');\nvar miniflat = require('./miniflat.js');\nfunction combineExtensions(extensions) {\n  var all = {};\n  var index = -1;\n  while (++index < extensions.length) {\n    extension(all, extensions[index]);\n  }\n  return all;\n}\nfunction extension(all, extension) {\n  var hook;\n  var left;\n  var right;\n  var code;\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : all[hook] = {};\n    right = extension[hook];\n    for (code in right) {\n      left[code] = constructs(miniflat(right[code]), hasOwnProperty.call(left, code) ? left[code] : []);\n    }\n  }\n}\nfunction constructs(list, existing) {\n  var index = -1;\n  var before = [];\n  while (++index < list.length) {\n    ;\n    (list[index].add === 'after' ? existing : before).push(list[index]);\n  }\n  chunkedSplice(existing, 0, 0, before);\n  return existing;\n}\nmodule.exports = combineExtensions;","map":{"version":3,"names":["hasOwnProperty","require","chunkedSplice","miniflat","combineExtensions","extensions","all","index","length","extension","hook","left","right","code","call","constructs","list","existing","before","add","push","module","exports"],"sources":["/Users/wallysonsilva/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/util/combine-extensions.js"],"sourcesContent":["'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,iCAAiC,CAAC;AAC/D,IAAIC,aAAa,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAClD,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAe,CAAC;AAEvC,SAASG,iBAAiBA,CAACC,UAAU,EAAE;EACrC,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGF,UAAU,CAACG,MAAM,EAAE;IAClCC,SAAS,CAACH,GAAG,EAAED,UAAU,CAACE,KAAK,CAAC,CAAC;EACnC;EAEA,OAAOD,GAAG;AACZ;AAEA,SAASG,SAASA,CAACH,GAAG,EAAEG,SAAS,EAAE;EACjC,IAAIC,IAAI;EACR,IAAIC,IAAI;EACR,IAAIC,KAAK;EACT,IAAIC,IAAI;EAER,KAAKH,IAAI,IAAID,SAAS,EAAE;IACtBE,IAAI,GAAGX,cAAc,CAACc,IAAI,CAACR,GAAG,EAAEI,IAAI,CAAC,GAAGJ,GAAG,CAACI,IAAI,CAAC,GAAIJ,GAAG,CAACI,IAAI,CAAC,GAAG,CAAC,CAAE;IACpEE,KAAK,GAAGH,SAAS,CAACC,IAAI,CAAC;IAEvB,KAAKG,IAAI,IAAID,KAAK,EAAE;MAClBD,IAAI,CAACE,IAAI,CAAC,GAAGE,UAAU,CACrBZ,QAAQ,CAACS,KAAK,CAACC,IAAI,CAAC,CAAC,EACrBb,cAAc,CAACc,IAAI,CAACH,IAAI,EAAEE,IAAI,CAAC,GAAGF,IAAI,CAACE,IAAI,CAAC,GAAG,EAAE,CAClD;IACH;EACF;AACF;AAEA,SAASE,UAAUA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAClC,IAAIV,KAAK,GAAG,CAAC,CAAC;EACd,IAAIW,MAAM,GAAG,EAAE;EAEf,OAAO,EAAEX,KAAK,GAAGS,IAAI,CAACR,MAAM,EAAE;IAC5B;IAAC,CAACQ,IAAI,CAACT,KAAK,CAAC,CAACY,GAAG,KAAK,OAAO,GAAGF,QAAQ,GAAGC,MAAM,EAAEE,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC,CAAC;EACtE;EAEAL,aAAa,CAACe,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAEC,MAAM,CAAC;EACrC,OAAOD,QAAQ;AACjB;AAEAI,MAAM,CAACC,OAAO,GAAGlB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}