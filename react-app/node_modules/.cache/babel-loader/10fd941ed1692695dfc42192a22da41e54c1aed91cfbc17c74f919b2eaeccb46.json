{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\sdgp\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\LoginComponents\\\\StaffLoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button, InsetText } from \"govuk-react\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StaffLoginForm() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  let staffType;\n  const submitFormHandler = e => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/stafflogindata.php\",\n      type: \"POST\",\n      data: {\n        email: email,\n        password: password\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no users\") {\n          console.error(\"No users found.\");\n        } else {\n          let empId = response.empID;\n          let empFName = response.empFName;\n          let empLName = response.empLName;\n          let empType = response.employeeType;\n          let session_token = response.session_token;\n          staffType = empType;\n          localStorage.setItem(\"empId\", empId);\n          localStorage.setItem(\"empFName\", empFName);\n          localStorage.setItem(\"empLName\", empLName);\n          localStorage.setItem(\"empType\", empType);\n          sessionStorage.setItem(\"session_token\", session_token);\n          setIsLoggedIn(true);\n\n          //navigate(\"/\");\n          if (staffType === 'Doctor') {\n            navigate('/DoctorDashboard');\n          } else {\n            navigate('/');\n          }\n        }\n      },\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      }\n    });\n  };\n\n  //Input validation\n  const emailHandler = e => {\n    let input = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (emailRegex.test(input)) {\n      setEmail(input);\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  //Input validation\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: \"Redirecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      children: /*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n          size: \"LARGE\",\n          children: \"Staff Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: emailHandler,\n          value: email,\n          input: {\n            name: \"email\",\n            type: \"email\"\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: pwHandler,\n          value: password,\n          input: {\n            name: \"password\",\n            type: \"password\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          margin: 3,\n          disabled: !validEmail || !validPw,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffLoginForm, \"dlz9zwWtAtwlSNzv3ThL4kSqqYM=\", false, function () {\n  return [useNavigate];\n});\n_c = StaffLoginForm;\nexport default StaffLoginForm;\nvar _c;\n$RefreshReg$(_c, \"StaffLoginForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","jq","Main","Fieldset","InputField","Button","InsetText","AuthContext","jsxDEV","_jsxDEV","StaffLoginForm","_s","navigate","email","setEmail","password","setPassword","validEmail","setValidEmail","validPw","setValidPw","isLoggedIn","setIsLoggedIn","staffType","submitFormHandler","e","preventDefault","ajax","url","type","data","dataType","success","response","console","error","empId","empID","empFName","empLName","empType","employeeType","session_token","localStorage","setItem","sessionStorage","log","emailHandler","input","target","value","emailRegex","test","pwHandler","length","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Legend","size","padding","onChange","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/StaffLoginForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jq from \"jquery\";\r\nimport {\r\n  Main,\r\n  Fieldset,\r\n  InputField,\r\n  Button,\r\n  InsetText,\r\n \r\n} from \"govuk-react\";\r\n\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nfunction StaffLoginForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [validPw, setValidPw] = useState(false);\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n\r\n  let staffType;\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Retrieve data from db\r\n    jq.ajax({\r\n      url: \"http://localhost:4000/stafflogindata.php\",\r\n      type: \"POST\",\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      dataType: \"json\",\r\n      success: function (response) {\r\n        if (response === \"no users\") {\r\n          console.error(\"No users found.\");\r\n        } else {\r\n          let empId = response.empID;\r\n          let empFName = response.empFName;\r\n          let empLName = response.empLName;\r\n          let empType = response.employeeType;\r\n          let session_token = response.session_token;\r\n\r\n          staffType = empType;\r\n         \r\n          localStorage.setItem(\"empId\", empId);\r\n          localStorage.setItem(\"empFName\", empFName);\r\n          localStorage.setItem(\"empLName\", empLName);\r\n          localStorage.setItem(\"empType\", empType);\r\n          sessionStorage.setItem(\"session_token\", session_token);\r\n\r\n          setIsLoggedIn(true);\r\n\r\n          //navigate(\"/\");\r\n          if (staffType === 'Doctor') {\r\n            navigate('/DoctorDashboard');\r\n          } else {\r\n            navigate('/');\r\n          }\r\n        }\r\n      },\r\n      error: function (error) {\r\n        console.log(error);\r\n        // handle error here\r\n      },\r\n    });\r\n  };\r\n\r\n   //Input validation\r\n   const emailHandler = (e) => {\r\n    let input = e.target.value;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (emailRegex.test(input)) {\r\n      setEmail(input);\r\n      setValidEmail(true);\r\n    } else {\r\n      setValidEmail(false);\r\n    }\r\n  };\r\n\r\n  //Input validation\r\n  const pwHandler = (e) => {\r\n    let input = e.target.value;\r\n    setPassword(input);\r\n    if (input.length > 4) {\r\n      setValidPw(true);\r\n    } else {\r\n      setValidPw(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Main>\r\n        <InsetText margin={3}>Redirecting...</InsetText>\r\n      </Main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <form  onSubmit={submitFormHandler}>\r\n        <Fieldset>\r\n          <Fieldset.Legend size=\"LARGE\">Staff Login</Fieldset.Legend>\r\n          <InputField\r\n            padding={3}\r\n            onChange={emailHandler}\r\n            value={email}\r\n            input={{\r\n              name: \"email\",\r\n              type: \"email\",\r\n            }}\r\n          >\r\n            Username\r\n          </InputField>\r\n          <InputField\r\n            padding={3}\r\n            onChange={pwHandler}\r\n            value={password}\r\n            input={{\r\n              name: \"password\",\r\n              type: \"password\",\r\n            }}\r\n          >\r\n            Password\r\n          </InputField>\r\n          <Button type=\"submit\" margin={3} disabled={!validEmail || !validPw}>\r\n            Continue\r\n          </Button>\r\n        </Fieldset>\r\n      </form>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default StaffLoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}