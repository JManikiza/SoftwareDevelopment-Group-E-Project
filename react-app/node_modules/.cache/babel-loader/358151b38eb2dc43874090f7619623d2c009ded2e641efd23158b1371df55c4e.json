{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\sdgp\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\LoginComponents\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button, InsetText, Link } from \"govuk-react\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (isLoggedIn && location.pathname === \"/login\") {\n      navigate(\"/Patient\");\n    }\n  }, [isLoggedIn, location, navigate]);\n  useEffect(() => {\n    if (isLoggedIn) {\n      setTimeout(() => {\n        navigate(\"/Patient\");\n      }, 1000);\n    } else {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n  const submitFormHandler = e => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/patientlogindata.php\",\n      type: \"POST\",\n      data: {\n        email: email,\n        password: password\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no patients\") {\n          console.error(\"No patients found.\");\n        } else {\n          let patientName = response.patientName;\n          let nhsNo = response.nhsNo;\n          let session_token = response.session_token;\n          localStorage.setItem(\"patientName\", patientName);\n          localStorage.setItem(\"nhsNo\", nhsNo);\n          sessionStorage.setItem(\"session_token\", session_token); // Store session token in session storage\n\n          console.log(\"Patient name: \" + patientName);\n          console.log(\"NHS no: \" + nhsNo);\n          setIsLoggedIn(true);\n          console.log(\"isLoggedIn:\", true);\n          setTimeout(() => {\n            navigate(\"/Patient\");\n          }, 2000); // 2 second delay\n        }\n      },\n\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      }\n    });\n  };\n\n  //Input validation\n  const emailHandler = e => {\n    let input = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (emailRegex.test(input)) {\n      setEmail(input);\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  //Input validation\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n\n  // if user already logged in, display redirect message\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: \"Redirecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFormHandler,\n        children: /*#__PURE__*/_jsxDEV(Fieldset, {\n          children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n            size: \"LARGE\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            padding: 3,\n            onChange: emailHandler,\n            value: email,\n            input: {\n              name: \"email\",\n              type: \"email\"\n            },\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            padding: 3,\n            onChange: pwHandler,\n            value: password,\n            input: {\n              name: \"password\",\n              type: \"password\"\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            margin: 3,\n            disabled: !validEmail || !validPw,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: [\"New patient? Register\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/NhsNumber\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: [\"Staff login\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/stafflogin\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"ZQHp+k8kvOoB7w4+hxKDV4rtnZA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","useLocation","jq","Main","Fieldset","InputField","Button","InsetText","Link","AuthContext","jsxDEV","_jsxDEV","LoginForm","_s","navigate","location","email","setEmail","password","setPassword","validEmail","setValidEmail","validPw","setValidPw","isLoggedIn","setIsLoggedIn","pathname","setTimeout","submitFormHandler","e","preventDefault","ajax","url","type","data","dataType","success","response","console","error","patientName","nhsNo","session_token","localStorage","setItem","sessionStorage","log","emailHandler","input","target","value","emailRegex","test","pwHandler","length","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Legend","size","padding","onChange","name","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/LoginForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport jq from \"jquery\";\r\nimport {\r\n  Main,\r\n  Fieldset,\r\n  InputField,\r\n  Button,\r\n  InsetText,\r\n  Link,\r\n} from \"govuk-react\";\r\n\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nfunction LoginForm() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [validPw, setValidPw] = useState(false);\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n  \r\n  useEffect(() => {\r\n    if (isLoggedIn && location.pathname === \"/login\") {\r\n      navigate(\"/Patient\");\r\n    }\r\n  }, [isLoggedIn, location, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setTimeout(() => {\r\n        navigate(\"/Patient\");\r\n      }, 1000);\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isLoggedIn, navigate]);\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Retrieve data from db\r\n    jq.ajax({\r\n      url: \"http://localhost:4000/patientlogindata.php\",\r\n      type: \"POST\",\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      dataType: \"json\",\r\n      success: function (response) {\r\n        if (response === \"no patients\") {\r\n          console.error(\"No patients found.\");\r\n        } else {\r\n          let patientName = response.patientName;\r\n          let nhsNo = response.nhsNo;\r\n          let session_token = response.session_token;\r\n          localStorage.setItem(\"patientName\", patientName);\r\n          localStorage.setItem(\"nhsNo\", nhsNo);\r\n          sessionStorage.setItem(\"session_token\", session_token); // Store session token in session storage\r\n          \r\n          console.log(\"Patient name: \" + patientName);\r\n          console.log(\"NHS no: \" + nhsNo);\r\n\r\n          setIsLoggedIn(true);\r\n          console.log(\"isLoggedIn:\", true);\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/Patient\");\r\n          }, 2000); // 2 second delay\r\n        }\r\n      },\r\n      error: function (error) {\r\n        console.log(error);\r\n        // handle error here\r\n      },\r\n    });\r\n  };\r\n\r\n  //Input validation\r\n  const emailHandler = (e) => {\r\n    let input = e.target.value;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (emailRegex.test(input)) {\r\n      setEmail(input);\r\n      setValidEmail(true);\r\n    } else {\r\n      setValidEmail(false);\r\n    }\r\n  };\r\n\r\n  //Input validation\r\n  const pwHandler = (e) => {\r\n    let input = e.target.value;\r\n    setPassword(input);\r\n    if (input.length > 4) {\r\n      setValidPw(true);\r\n    } else {\r\n      setValidPw(false);\r\n    }\r\n  };\r\n\r\n  // if user already logged in, display redirect message\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Main>\r\n        <InsetText margin={3}>Redirecting...</InsetText>\r\n      </Main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <form onSubmit={submitFormHandler}>\r\n          <Fieldset>\r\n            <Fieldset.Legend size=\"LARGE\">Login</Fieldset.Legend>\r\n            <InputField\r\n              padding={3}\r\n              onChange={emailHandler}\r\n              value={email}\r\n              input={{\r\n                name: \"email\",\r\n                type: \"email\",\r\n              }}\r\n            >\r\n              Email address\r\n            </InputField>\r\n            <InputField\r\n              padding={3}\r\n              onChange={pwHandler}\r\n              value={password}\r\n              input={{\r\n                name: \"password\",\r\n                type: \"password\",\r\n              }}\r\n            >\r\n              Password\r\n            </InputField>\r\n            <Button type=\"submit\" margin={3} disabled={!validEmail || !validPw}>\r\n              Continue\r\n            </Button>\r\n          </Fieldset>\r\n        </form>\r\n\r\n        <br />\r\n        <InsetText margin={3}>\r\n          New patient? Register&nbsp;\r\n          <Link href=\"/NhsNumber\">here</Link>\r\n        </InsetText>\r\n        <InsetText margin={3}>\r\n          Staff login&nbsp;\r\n          <Link href=\"/stafflogin\">here</Link>\r\n        </InsetText>\r\n        <br />\r\n        <br />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}