{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\sdgp\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\LoginComponents\\\\StaffLoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StaffLoginForm() {\n  _s();\n  const navigate = useNavigate();\n  const [empId, setEmpId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmpId, setValidEmpId] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const empIdHandler = e => {\n    let input = e.target.value;\n    const regex = /^[0-9]+$/;\n    if (regex.test(input) && input.length > 3) {\n      setEmpId(input);\n      setValidEmpId(true);\n    } else {\n      setValidEmpId(false);\n    }\n  };\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      children: /*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n          size: \"LARGE\",\n          children: \"Staff Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: empIdHandler,\n          value: empId,\n          input: {\n            name: \"empId\",\n            type: \"text\"\n          },\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          padding: 3,\n          onChange: pwHandler,\n          value: password,\n          input: {\n            name: \"password\",\n            type: \"password\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          margin: 3,\n          disabled: !validEmpId || !validPw,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffLoginForm, \"72FrAokHkmsyF+NhqASL5fnlKu8=\", false, function () {\n  return [useNavigate];\n});\n_c = StaffLoginForm;\nexport default StaffLoginForm;\nvar _c;\n$RefreshReg$(_c, \"StaffLoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jq","Main","Fieldset","InputField","Button","jsxDEV","_jsxDEV","StaffLoginForm","_s","navigate","empId","setEmpId","password","setPassword","validEmpId","setValidEmpId","validPw","setValidPw","empIdHandler","e","input","target","value","regex","test","length","pwHandler","children","onSubmit","submitFormHandler","Legend","size","fileName","_jsxFileName","lineNumber","columnNumber","padding","onChange","name","type","margin","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/StaffLoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jq from \"jquery\";\r\nimport { Main, Fieldset, InputField, Button } from \"govuk-react\";\r\n\r\nfunction StaffLoginForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [empId, setEmpId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [validEmpId, setValidEmpId] = useState(false);\r\n  const [validPw, setValidPw] = useState(false);\r\n\r\n  const empIdHandler = (e) => {\r\n    let input = e.target.value;\r\n    const regex = /^[0-9]+$/;\r\n\r\n    if (regex.test(input) && input.length > 3) {\r\n      setEmpId(input);\r\n      setValidEmpId(true);\r\n    } else {\r\n      setValidEmpId(false);\r\n    }\r\n  };\r\n\r\n  const pwHandler = (e) => {\r\n    let input = e.target.value;\r\n    setPassword(input);\r\n    if (input.length > 4) {\r\n      setValidPw(true);\r\n    } else {\r\n      setValidPw(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <form onSubmit={submitFormHandler}>\r\n        <Fieldset>\r\n          <Fieldset.Legend size=\"LARGE\">Staff Login</Fieldset.Legend>\r\n          <InputField\r\n            padding={3}\r\n            onChange={empIdHandler}\r\n            value={empId}\r\n            input={{\r\n              name: \"empId\",\r\n              type: \"text\",\r\n            }}\r\n          >\r\n            Email address\r\n          </InputField>\r\n          <InputField\r\n            padding={3}\r\n            onChange={pwHandler}\r\n            value={password}\r\n            input={{\r\n              name: \"password\",\r\n              type: \"password\",\r\n            }}\r\n          >\r\n            Password\r\n          </InputField>\r\n          <Button type=\"submit\" margin={3} disabled={!validEmpId || !validPw}>\r\n            Continue\r\n          </Button>\r\n        </Fieldset>\r\n      </form>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default StaffLoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}