{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar chunkedSplice = require('../util/chunked-splice.js');\nvar prefixSize = require('../util/prefix-size.js');\nvar factorySpace = require('./factory-space.js');\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n};\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n};\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  };\n  chunkedSplice(events, 0, 0, [['enter', code, context]]);\n  chunkedSplice(events, events.length, 0, [['exit', code, context]]);\n  return events;\n}\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok);\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code);\n    }\n    effects.enter('codeFlowValue');\n    return content(code);\n  }\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return afterPrefix(code);\n    }\n    effects.consume(code);\n    return content;\n  }\n}\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this;\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1);\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1);\n    }\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code);\n  }\n}\nmodule.exports = codeIndented;","map":{"version":3,"names":["markdownLineEnding","require","chunkedSplice","prefixSize","factorySpace","codeIndented","name","tokenize","tokenizeCodeIndented","resolve","resolveCodeIndented","indentedContentConstruct","tokenizeIndentedContent","partial","events","context","code","type","start","end","length","effects","ok","nok","attempt","afterPrefix","enter","content","exit","consume","self","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/code-indented.js"],"sourcesContent":["'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}