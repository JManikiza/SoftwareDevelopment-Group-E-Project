{"ast":null,"code":"'use strict';\n\nmodule.exports = fromMarkdown;\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string');\nvar assign = require('micromark/dist/constant/assign');\nvar own = require('micromark/dist/constant/has-own-property');\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier');\nvar safeFromInt = require('micromark/dist/util/safe-from-int');\nvar parser = require('micromark/dist/parse');\nvar preprocessor = require('micromark/dist/preprocess');\nvar postprocess = require('micromark/dist/postprocess');\nvar decode = require('parse-entities/decode-entity');\nvar stringifyPosition = require('unist-util-stringify-position');\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parser(options).document().write(preprocessor()(value, encoding, true))));\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {};\n  var config = configure({\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }, settings.mdastExtensions || []);\n  var data = {};\n  return compile;\n  function compile(events) {\n    var tree = {\n      type: 'root',\n      children: []\n    };\n    var stack = [tree];\n    var tokenStack = [];\n    var listStack = [];\n    var index = -1;\n    var handler;\n    var listStart;\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    };\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === 'listOrdered' || events[index][1].type === 'listUnordered') {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          listStart = listStack.pop(index);\n          index = prepareList(events, listStart, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n    if (tokenStack.length) {\n      throw new Error('Cannot close document, a token (`' + tokenStack[tokenStack.length - 1].type + '`, ' + stringifyPosition({\n        start: tokenStack[tokenStack.length - 1].start,\n        end: tokenStack[tokenStack.length - 1].end\n      }) + ') is still open');\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n  function prepareList(events, start, length) {\n    var index = start - 1;\n    var containerBalance = -1;\n    var listSpread = false;\n    var listItem;\n    var tailIndex;\n    var lineIndex;\n    var tailEvent;\n    var event;\n    var firstBlankLineIndex;\n    var atMarker;\n    while (++index <= length) {\n      event = events[index];\n      if (event[1].type === 'listUnordered' || event[1].type === 'listOrdered' || event[1].type === 'blockQuote') {\n        if (event[0] === 'enter') {\n          containerBalance++;\n        } else {\n          containerBalance--;\n        }\n        atMarker = undefined;\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n            firstBlankLineIndex = index;\n          }\n          atMarker = undefined;\n        }\n      } else if (event[1].type === 'linePrefix' || event[1].type === 'listItemValue' || event[1].type === 'listItemMarker' || event[1].type === 'listItemPrefix' || event[1].type === 'listItemPrefixWhitespace') {\n        // Empty.\n      } else {\n        atMarker = undefined;\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === 'listItemPrefix' || containerBalance === -1 && event[0] === 'exit' && (event[1].type === 'listUnordered' || event[1].type === 'listOrdered')) {\n        if (listItem) {\n          tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            tailEvent = events[tailIndex];\n            if (tailEvent[1].type === 'lineEnding' || tailEvent[1].type === 'lineEndingBlank') {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank';\n                listSpread = true;\n              }\n              tailEvent[1].type = 'lineEnding';\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === 'linePrefix' || tailEvent[1].type === 'blockQuotePrefix' || tailEvent[1].type === 'blockQuotePrefixWhitespace' || tailEvent[1].type === 'blockQuoteMarker' || tailEvent[1].type === 'listItemIndent') {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = point(lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          };\n          events.splice(index, 0, ['enter', listItem, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n  function setData(key, value) {\n    data[key] = value;\n  }\n  function getData(key) {\n    return data[key];\n  }\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    };\n  }\n  function opener(create, and) {\n    return open;\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node);\n    this.stack.push(node);\n    this.tokenStack.push(token);\n    node.position = {\n      start: point(token.start)\n    };\n    return node;\n  }\n  function closer(and) {\n    return close;\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n  function exit(token) {\n    var node = this.stack.pop();\n    var open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open.type !== token.type) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): a different token (`' + open.type + '`, ' + stringifyPosition({\n        start: open.start,\n        end: open.end\n      }) + ') is open');\n    }\n    node.position.end = point(token.end);\n    return node;\n  }\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true);\n  }\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(this.sliceSerialize(token), 10);\n      setData('expectingFirstListItemValue');\n    }\n  }\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].lang = data;\n  }\n  function onexitcodefencedfencemeta() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].meta = data;\n  }\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return;\n    this.buffer();\n    setData('flowCodeInside', true);\n  }\n  function onexitcodefenced() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    setData('flowCodeInside');\n  }\n  function onexitcodeindented() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume();\n    this.stack[this.stack.length - 1].label = label;\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n  function onexitdefinitiontitlestring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].title = data;\n  }\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].url = data;\n  }\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(token).length;\n    }\n  }\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true);\n  }\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;\n  }\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding');\n  }\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children;\n    var tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start)\n      };\n      this.stack[this.stack.length - 1].children.push(tail);\n    }\n    this.stack.push(tail);\n  }\n  function onexitdata(token) {\n    var tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1];\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(token.end);\n      setData('atHardBreak');\n      return;\n    }\n    if (!getData('setextHeadingSlurpLineEnding') && config.canContainEols.indexOf(context.type) > -1) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n  function onexithardbreak() {\n    setData('atHardBreak', true);\n  }\n  function onexithtmlflow() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n  function onexithtmltext() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n  function onexitcodetext() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1];\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference';\n      context.referenceType = getData('referenceType') || 'shortcut';\n      delete context.url;\n      delete context.title;\n    } else {\n      delete context.identifier;\n      delete context.label;\n      delete context.referenceType;\n    }\n    setData('referenceType');\n  }\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1];\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference';\n      context.referenceType = getData('referenceType') || 'shortcut';\n      delete context.url;\n      delete context.title;\n    } else {\n      delete context.identifier;\n      delete context.label;\n      delete context.referenceType;\n    }\n    setData('referenceType');\n  }\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1];\n    var value = this.resume();\n    this.stack[this.stack.length - 1].label = value;\n\n    // Assume a reference.\n    setData('inReference', true);\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children;\n    } else {\n      this.stack[this.stack.length - 1].alt = value;\n    }\n  }\n  function onexitresourcedestinationstring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].url = data;\n  }\n  function onexitresourcetitlestring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].title = data;\n  }\n  function onexitresource() {\n    setData('inReference');\n  }\n  function onenterreference() {\n    setData('referenceType', 'collapsed');\n  }\n  function onexitreferencestring(token) {\n    var label = this.resume();\n    this.stack[this.stack.length - 1].label = label;\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    setData('referenceType', 'full');\n  }\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type);\n  }\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token);\n    var type = getData('characterReferenceType');\n    var value;\n    var tail;\n    if (type) {\n      value = safeFromInt(data, type === 'characterReferenceMarkerNumeric' ? 10 : 16);\n      setData('characterReferenceType');\n    } else {\n      value = decode(data);\n    }\n    tail = this.stack.pop();\n    tail.value += value;\n    tail.position.end = point(token.end);\n  }\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token);\n  }\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    this.stack[this.stack.length - 1].url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n  function heading() {\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    };\n  }\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\nfunction configure(config, extensions) {\n  var index = -1;\n  while (++index < extensions.length) {\n    extension(config, extensions[index]);\n  }\n  return config;\n}\nfunction extension(config, extension) {\n  var key;\n  var left;\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : config[key] = {};\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key]);\n    } else {\n      Object.assign(left, extension[key]);\n    }\n  }\n}","map":{"version":3,"names":["module","exports","fromMarkdown","toString","require","assign","own","normalizeIdentifier","safeFromInt","parser","preprocessor","postprocess","decode","stringifyPosition","value","encoding","options","undefined","compiler","document","write","settings","config","configure","transforms","canContainEols","enter","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","heading","blockQuote","characterEscape","characterReference","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","data","codeFlowValue","definition","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","html","htmlFlowData","htmlText","htmlTextData","image","label","listItem","listItemValue","onenterlistitemvalue","listOrdered","list","onenterlistordered","listUnordered","paragraph","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","exit","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","tree","type","children","stack","tokenStack","listStack","index","handler","listStart","context","resume","setData","getData","length","push","pop","prepareList","call","sliceSerialize","Error","start","end","position","point","line","column","offset","containerBalance","listSpread","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","_spread","splice","key","d","create","and","open","token","node","close","parseInt","lang","meta","replace","identifier","toLowerCase","title","url","depth","charCodeAt","siblings","tail","text","indexOf","referenceType","fragment","alt","ordered","spread","checked","extensions","extension","left","concat","Object"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/node_modules/mdast-util-from-markdown/dist/index.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = fromMarkdown\r\n\r\n// These three are compiled away in the `dist/`\r\n\r\nvar toString = require('mdast-util-to-string')\r\nvar assign = require('micromark/dist/constant/assign')\r\nvar own = require('micromark/dist/constant/has-own-property')\r\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\r\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\r\nvar parser = require('micromark/dist/parse')\r\nvar preprocessor = require('micromark/dist/preprocess')\r\nvar postprocess = require('micromark/dist/postprocess')\r\nvar decode = require('parse-entities/decode-entity')\r\nvar stringifyPosition = require('unist-util-stringify-position')\r\n\r\nfunction fromMarkdown(value, encoding, options) {\r\n  if (typeof encoding !== 'string') {\r\n    options = encoding\r\n    encoding = undefined\r\n  }\r\n\r\n  return compiler(options)(\r\n    postprocess(\r\n      parser(options).document().write(preprocessor()(value, encoding, true))\r\n    )\r\n  )\r\n}\r\n\r\n// Note this compiler only understand complete buffering, not streaming.\r\nfunction compiler(options) {\r\n  var settings = options || {}\r\n  var config = configure(\r\n    {\r\n      transforms: [],\r\n      canContainEols: [\r\n        'emphasis',\r\n        'fragment',\r\n        'heading',\r\n        'paragraph',\r\n        'strong'\r\n      ],\r\n\r\n      enter: {\r\n        autolink: opener(link),\r\n        autolinkProtocol: onenterdata,\r\n        autolinkEmail: onenterdata,\r\n        atxHeading: opener(heading),\r\n        blockQuote: opener(blockQuote),\r\n        characterEscape: onenterdata,\r\n        characterReference: onenterdata,\r\n        codeFenced: opener(codeFlow),\r\n        codeFencedFenceInfo: buffer,\r\n        codeFencedFenceMeta: buffer,\r\n        codeIndented: opener(codeFlow, buffer),\r\n        codeText: opener(codeText, buffer),\r\n        codeTextData: onenterdata,\r\n        data: onenterdata,\r\n        codeFlowValue: onenterdata,\r\n        definition: opener(definition),\r\n        definitionDestinationString: buffer,\r\n        definitionLabelString: buffer,\r\n        definitionTitleString: buffer,\r\n        emphasis: opener(emphasis),\r\n        hardBreakEscape: opener(hardBreak),\r\n        hardBreakTrailing: opener(hardBreak),\r\n        htmlFlow: opener(html, buffer),\r\n        htmlFlowData: onenterdata,\r\n        htmlText: opener(html, buffer),\r\n        htmlTextData: onenterdata,\r\n        image: opener(image),\r\n        label: buffer,\r\n        link: opener(link),\r\n        listItem: opener(listItem),\r\n        listItemValue: onenterlistitemvalue,\r\n        listOrdered: opener(list, onenterlistordered),\r\n        listUnordered: opener(list),\r\n        paragraph: opener(paragraph),\r\n        reference: onenterreference,\r\n        referenceString: buffer,\r\n        resourceDestinationString: buffer,\r\n        resourceTitleString: buffer,\r\n        setextHeading: opener(heading),\r\n        strong: opener(strong),\r\n        thematicBreak: opener(thematicBreak)\r\n      },\r\n\r\n      exit: {\r\n        atxHeading: closer(),\r\n        atxHeadingSequence: onexitatxheadingsequence,\r\n        autolink: closer(),\r\n        autolinkEmail: onexitautolinkemail,\r\n        autolinkProtocol: onexitautolinkprotocol,\r\n        blockQuote: closer(),\r\n        characterEscapeValue: onexitdata,\r\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\r\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\r\n        characterReferenceValue: onexitcharacterreferencevalue,\r\n        codeFenced: closer(onexitcodefenced),\r\n        codeFencedFence: onexitcodefencedfence,\r\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\r\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\r\n        codeFlowValue: onexitdata,\r\n        codeIndented: closer(onexitcodeindented),\r\n        codeText: closer(onexitcodetext),\r\n        codeTextData: onexitdata,\r\n        data: onexitdata,\r\n        definition: closer(),\r\n        definitionDestinationString: onexitdefinitiondestinationstring,\r\n        definitionLabelString: onexitdefinitionlabelstring,\r\n        definitionTitleString: onexitdefinitiontitlestring,\r\n        emphasis: closer(),\r\n        hardBreakEscape: closer(onexithardbreak),\r\n        hardBreakTrailing: closer(onexithardbreak),\r\n        htmlFlow: closer(onexithtmlflow),\r\n        htmlFlowData: onexitdata,\r\n        htmlText: closer(onexithtmltext),\r\n        htmlTextData: onexitdata,\r\n        image: closer(onexitimage),\r\n        label: onexitlabel,\r\n        labelText: onexitlabeltext,\r\n        lineEnding: onexitlineending,\r\n        link: closer(onexitlink),\r\n        listItem: closer(),\r\n        listOrdered: closer(),\r\n        listUnordered: closer(),\r\n        paragraph: closer(),\r\n        referenceString: onexitreferencestring,\r\n        resourceDestinationString: onexitresourcedestinationstring,\r\n        resourceTitleString: onexitresourcetitlestring,\r\n        resource: onexitresource,\r\n        setextHeading: closer(onexitsetextheading),\r\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\r\n        setextHeadingText: onexitsetextheadingtext,\r\n        strong: closer(),\r\n        thematicBreak: closer()\r\n      }\r\n    },\r\n\r\n    settings.mdastExtensions || []\r\n  )\r\n\r\n  var data = {}\r\n\r\n  return compile\r\n\r\n  function compile(events) {\r\n    var tree = {type: 'root', children: []}\r\n    var stack = [tree]\r\n    var tokenStack = []\r\n    var listStack = []\r\n    var index = -1\r\n    var handler\r\n    var listStart\r\n\r\n    var context = {\r\n      stack: stack,\r\n      tokenStack: tokenStack,\r\n      config: config,\r\n      enter: enter,\r\n      exit: exit,\r\n      buffer: buffer,\r\n      resume: resume,\r\n      setData: setData,\r\n      getData: getData\r\n    }\r\n\r\n    while (++index < events.length) {\r\n      // We preprocess lists to add `listItem` tokens, and to infer whether\r\n      // items the list itself are spread out.\r\n      if (\r\n        events[index][1].type === 'listOrdered' ||\r\n        events[index][1].type === 'listUnordered'\r\n      ) {\r\n        if (events[index][0] === 'enter') {\r\n          listStack.push(index)\r\n        } else {\r\n          listStart = listStack.pop(index)\r\n          index = prepareList(events, listStart, index)\r\n        }\r\n      }\r\n    }\r\n\r\n    index = -1\r\n\r\n    while (++index < events.length) {\r\n      handler = config[events[index][0]]\r\n\r\n      if (own.call(handler, events[index][1].type)) {\r\n        handler[events[index][1].type].call(\r\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\r\n          events[index][1]\r\n        )\r\n      }\r\n    }\r\n\r\n    if (tokenStack.length) {\r\n      throw new Error(\r\n        'Cannot close document, a token (`' +\r\n          tokenStack[tokenStack.length - 1].type +\r\n          '`, ' +\r\n          stringifyPosition({\r\n            start: tokenStack[tokenStack.length - 1].start,\r\n            end: tokenStack[tokenStack.length - 1].end\r\n          }) +\r\n          ') is still open'\r\n      )\r\n    }\r\n\r\n    // Figure out `root` position.\r\n    tree.position = {\r\n      start: point(\r\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\r\n      ),\r\n\r\n      end: point(\r\n        events.length\r\n          ? events[events.length - 2][1].end\r\n          : {line: 1, column: 1, offset: 0}\r\n      )\r\n    }\r\n\r\n    index = -1\r\n    while (++index < config.transforms.length) {\r\n      tree = config.transforms[index](tree) || tree\r\n    }\r\n\r\n    return tree\r\n  }\r\n\r\n  function prepareList(events, start, length) {\r\n    var index = start - 1\r\n    var containerBalance = -1\r\n    var listSpread = false\r\n    var listItem\r\n    var tailIndex\r\n    var lineIndex\r\n    var tailEvent\r\n    var event\r\n    var firstBlankLineIndex\r\n    var atMarker\r\n\r\n    while (++index <= length) {\r\n      event = events[index]\r\n\r\n      if (\r\n        event[1].type === 'listUnordered' ||\r\n        event[1].type === 'listOrdered' ||\r\n        event[1].type === 'blockQuote'\r\n      ) {\r\n        if (event[0] === 'enter') {\r\n          containerBalance++\r\n        } else {\r\n          containerBalance--\r\n        }\r\n\r\n        atMarker = undefined\r\n      } else if (event[1].type === 'lineEndingBlank') {\r\n        if (event[0] === 'enter') {\r\n          if (\r\n            listItem &&\r\n            !atMarker &&\r\n            !containerBalance &&\r\n            !firstBlankLineIndex\r\n          ) {\r\n            firstBlankLineIndex = index\r\n          }\r\n\r\n          atMarker = undefined\r\n        }\r\n      } else if (\r\n        event[1].type === 'linePrefix' ||\r\n        event[1].type === 'listItemValue' ||\r\n        event[1].type === 'listItemMarker' ||\r\n        event[1].type === 'listItemPrefix' ||\r\n        event[1].type === 'listItemPrefixWhitespace'\r\n      ) {\r\n        // Empty.\r\n      } else {\r\n        atMarker = undefined\r\n      }\r\n\r\n      if (\r\n        (!containerBalance &&\r\n          event[0] === 'enter' &&\r\n          event[1].type === 'listItemPrefix') ||\r\n        (containerBalance === -1 &&\r\n          event[0] === 'exit' &&\r\n          (event[1].type === 'listUnordered' ||\r\n            event[1].type === 'listOrdered'))\r\n      ) {\r\n        if (listItem) {\r\n          tailIndex = index\r\n          lineIndex = undefined\r\n\r\n          while (tailIndex--) {\r\n            tailEvent = events[tailIndex]\r\n\r\n            if (\r\n              tailEvent[1].type === 'lineEnding' ||\r\n              tailEvent[1].type === 'lineEndingBlank'\r\n            ) {\r\n              if (tailEvent[0] === 'exit') continue\r\n\r\n              if (lineIndex) {\r\n                events[lineIndex][1].type = 'lineEndingBlank'\r\n                listSpread = true\r\n              }\r\n\r\n              tailEvent[1].type = 'lineEnding'\r\n              lineIndex = tailIndex\r\n            } else if (\r\n              tailEvent[1].type === 'linePrefix' ||\r\n              tailEvent[1].type === 'blockQuotePrefix' ||\r\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\r\n              tailEvent[1].type === 'blockQuoteMarker' ||\r\n              tailEvent[1].type === 'listItemIndent'\r\n            ) {\r\n              // Empty\r\n            } else {\r\n              break\r\n            }\r\n          }\r\n\r\n          if (\r\n            firstBlankLineIndex &&\r\n            (!lineIndex || firstBlankLineIndex < lineIndex)\r\n          ) {\r\n            listItem._spread = true\r\n          }\r\n\r\n          // Fix position.\r\n          listItem.end = point(\r\n            lineIndex ? events[lineIndex][1].start : event[1].end\r\n          )\r\n\r\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\r\n          index++\r\n          length++\r\n        }\r\n\r\n        // Create a new list item.\r\n        if (event[1].type === 'listItemPrefix') {\r\n          listItem = {\r\n            type: 'listItem',\r\n            _spread: false,\r\n            start: point(event[1].start)\r\n          }\r\n\r\n          events.splice(index, 0, ['enter', listItem, event[2]])\r\n          index++\r\n          length++\r\n          firstBlankLineIndex = undefined\r\n          atMarker = true\r\n        }\r\n      }\r\n    }\r\n\r\n    events[start][1]._spread = listSpread\r\n    return length\r\n  }\r\n\r\n  function setData(key, value) {\r\n    data[key] = value\r\n  }\r\n\r\n  function getData(key) {\r\n    return data[key]\r\n  }\r\n\r\n  function point(d) {\r\n    return {line: d.line, column: d.column, offset: d.offset}\r\n  }\r\n\r\n  function opener(create, and) {\r\n    return open\r\n\r\n    function open(token) {\r\n      enter.call(this, create(token), token)\r\n      if (and) and.call(this, token)\r\n    }\r\n  }\r\n\r\n  function buffer() {\r\n    this.stack.push({type: 'fragment', children: []})\r\n  }\r\n\r\n  function enter(node, token) {\r\n    this.stack[this.stack.length - 1].children.push(node)\r\n    this.stack.push(node)\r\n    this.tokenStack.push(token)\r\n    node.position = {start: point(token.start)}\r\n    return node\r\n  }\r\n\r\n  function closer(and) {\r\n    return close\r\n\r\n    function close(token) {\r\n      if (and) and.call(this, token)\r\n      exit.call(this, token)\r\n    }\r\n  }\r\n\r\n  function exit(token) {\r\n    var node = this.stack.pop()\r\n    var open = this.tokenStack.pop()\r\n\r\n    if (!open) {\r\n      throw new Error(\r\n        'Cannot close `' +\r\n          token.type +\r\n          '` (' +\r\n          stringifyPosition({start: token.start, end: token.end}) +\r\n          '): it’s not open'\r\n      )\r\n    } else if (open.type !== token.type) {\r\n      throw new Error(\r\n        'Cannot close `' +\r\n          token.type +\r\n          '` (' +\r\n          stringifyPosition({start: token.start, end: token.end}) +\r\n          '): a different token (`' +\r\n          open.type +\r\n          '`, ' +\r\n          stringifyPosition({start: open.start, end: open.end}) +\r\n          ') is open'\r\n      )\r\n    }\r\n\r\n    node.position.end = point(token.end)\r\n    return node\r\n  }\r\n\r\n  function resume() {\r\n    return toString(this.stack.pop())\r\n  }\r\n\r\n  //\r\n  // Handlers.\r\n  //\r\n\r\n  function onenterlistordered() {\r\n    setData('expectingFirstListItemValue', true)\r\n  }\r\n\r\n  function onenterlistitemvalue(token) {\r\n    if (getData('expectingFirstListItemValue')) {\r\n      this.stack[this.stack.length - 2].start = parseInt(\r\n        this.sliceSerialize(token),\r\n        10\r\n      )\r\n\r\n      setData('expectingFirstListItemValue')\r\n    }\r\n  }\r\n\r\n  function onexitcodefencedfenceinfo() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].lang = data\r\n  }\r\n\r\n  function onexitcodefencedfencemeta() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].meta = data\r\n  }\r\n\r\n  function onexitcodefencedfence() {\r\n    // Exit if this is the closing fence.\r\n    if (getData('flowCodeInside')) return\r\n    this.buffer()\r\n    setData('flowCodeInside', true)\r\n  }\r\n\r\n  function onexitcodefenced() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].value = data.replace(\r\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\r\n      ''\r\n    )\r\n\r\n    setData('flowCodeInside')\r\n  }\r\n\r\n  function onexitcodeindented() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].value = data\r\n  }\r\n\r\n  function onexitdefinitionlabelstring(token) {\r\n    // Discard label, use the source content instead.\r\n    var label = this.resume()\r\n    this.stack[this.stack.length - 1].label = label\r\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\r\n      this.sliceSerialize(token)\r\n    ).toLowerCase()\r\n  }\r\n\r\n  function onexitdefinitiontitlestring() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].title = data\r\n  }\r\n\r\n  function onexitdefinitiondestinationstring() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].url = data\r\n  }\r\n\r\n  function onexitatxheadingsequence(token) {\r\n    if (!this.stack[this.stack.length - 1].depth) {\r\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\r\n        token\r\n      ).length\r\n    }\r\n  }\r\n\r\n  function onexitsetextheadingtext() {\r\n    setData('setextHeadingSlurpLineEnding', true)\r\n  }\r\n\r\n  function onexitsetextheadinglinesequence(token) {\r\n    this.stack[this.stack.length - 1].depth =\r\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\r\n  }\r\n\r\n  function onexitsetextheading() {\r\n    setData('setextHeadingSlurpLineEnding')\r\n  }\r\n\r\n  function onenterdata(token) {\r\n    var siblings = this.stack[this.stack.length - 1].children\r\n    var tail = siblings[siblings.length - 1]\r\n\r\n    if (!tail || tail.type !== 'text') {\r\n      // Add a new text node.\r\n      tail = text()\r\n      tail.position = {start: point(token.start)}\r\n      this.stack[this.stack.length - 1].children.push(tail)\r\n    }\r\n\r\n    this.stack.push(tail)\r\n  }\r\n\r\n  function onexitdata(token) {\r\n    var tail = this.stack.pop()\r\n    tail.value += this.sliceSerialize(token)\r\n    tail.position.end = point(token.end)\r\n  }\r\n\r\n  function onexitlineending(token) {\r\n    var context = this.stack[this.stack.length - 1]\r\n\r\n    // If we’re at a hard break, include the line ending in there.\r\n    if (getData('atHardBreak')) {\r\n      context.children[context.children.length - 1].position.end = point(\r\n        token.end\r\n      )\r\n\r\n      setData('atHardBreak')\r\n      return\r\n    }\r\n\r\n    if (\r\n      !getData('setextHeadingSlurpLineEnding') &&\r\n      config.canContainEols.indexOf(context.type) > -1\r\n    ) {\r\n      onenterdata.call(this, token)\r\n      onexitdata.call(this, token)\r\n    }\r\n  }\r\n\r\n  function onexithardbreak() {\r\n    setData('atHardBreak', true)\r\n  }\r\n\r\n  function onexithtmlflow() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].value = data\r\n  }\r\n\r\n  function onexithtmltext() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].value = data\r\n  }\r\n\r\n  function onexitcodetext() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].value = data\r\n  }\r\n\r\n  function onexitlink() {\r\n    var context = this.stack[this.stack.length - 1]\r\n\r\n    // To do: clean.\r\n    if (getData('inReference')) {\r\n      context.type += 'Reference'\r\n      context.referenceType = getData('referenceType') || 'shortcut'\r\n      delete context.url\r\n      delete context.title\r\n    } else {\r\n      delete context.identifier\r\n      delete context.label\r\n      delete context.referenceType\r\n    }\r\n\r\n    setData('referenceType')\r\n  }\r\n\r\n  function onexitimage() {\r\n    var context = this.stack[this.stack.length - 1]\r\n\r\n    // To do: clean.\r\n    if (getData('inReference')) {\r\n      context.type += 'Reference'\r\n      context.referenceType = getData('referenceType') || 'shortcut'\r\n      delete context.url\r\n      delete context.title\r\n    } else {\r\n      delete context.identifier\r\n      delete context.label\r\n      delete context.referenceType\r\n    }\r\n\r\n    setData('referenceType')\r\n  }\r\n\r\n  function onexitlabeltext(token) {\r\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\r\n      this.sliceSerialize(token)\r\n    ).toLowerCase()\r\n  }\r\n\r\n  function onexitlabel() {\r\n    var fragment = this.stack[this.stack.length - 1]\r\n    var value = this.resume()\r\n\r\n    this.stack[this.stack.length - 1].label = value\r\n\r\n    // Assume a reference.\r\n    setData('inReference', true)\r\n\r\n    if (this.stack[this.stack.length - 1].type === 'link') {\r\n      this.stack[this.stack.length - 1].children = fragment.children\r\n    } else {\r\n      this.stack[this.stack.length - 1].alt = value\r\n    }\r\n  }\r\n\r\n  function onexitresourcedestinationstring() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].url = data\r\n  }\r\n\r\n  function onexitresourcetitlestring() {\r\n    var data = this.resume()\r\n    this.stack[this.stack.length - 1].title = data\r\n  }\r\n\r\n  function onexitresource() {\r\n    setData('inReference')\r\n  }\r\n\r\n  function onenterreference() {\r\n    setData('referenceType', 'collapsed')\r\n  }\r\n\r\n  function onexitreferencestring(token) {\r\n    var label = this.resume()\r\n    this.stack[this.stack.length - 1].label = label\r\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\r\n      this.sliceSerialize(token)\r\n    ).toLowerCase()\r\n    setData('referenceType', 'full')\r\n  }\r\n\r\n  function onexitcharacterreferencemarker(token) {\r\n    setData('characterReferenceType', token.type)\r\n  }\r\n\r\n  function onexitcharacterreferencevalue(token) {\r\n    var data = this.sliceSerialize(token)\r\n    var type = getData('characterReferenceType')\r\n    var value\r\n    var tail\r\n\r\n    if (type) {\r\n      value = safeFromInt(\r\n        data,\r\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\r\n      )\r\n\r\n      setData('characterReferenceType')\r\n    } else {\r\n      value = decode(data)\r\n    }\r\n\r\n    tail = this.stack.pop()\r\n    tail.value += value\r\n    tail.position.end = point(token.end)\r\n  }\r\n\r\n  function onexitautolinkprotocol(token) {\r\n    onexitdata.call(this, token)\r\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\r\n  }\r\n\r\n  function onexitautolinkemail(token) {\r\n    onexitdata.call(this, token)\r\n    this.stack[this.stack.length - 1].url =\r\n      'mailto:' + this.sliceSerialize(token)\r\n  }\r\n\r\n  //\r\n  // Creaters.\r\n  //\r\n\r\n  function blockQuote() {\r\n    return {type: 'blockquote', children: []}\r\n  }\r\n\r\n  function codeFlow() {\r\n    return {type: 'code', lang: null, meta: null, value: ''}\r\n  }\r\n\r\n  function codeText() {\r\n    return {type: 'inlineCode', value: ''}\r\n  }\r\n\r\n  function definition() {\r\n    return {\r\n      type: 'definition',\r\n      identifier: '',\r\n      label: null,\r\n      title: null,\r\n      url: ''\r\n    }\r\n  }\r\n\r\n  function emphasis() {\r\n    return {type: 'emphasis', children: []}\r\n  }\r\n\r\n  function heading() {\r\n    return {type: 'heading', depth: undefined, children: []}\r\n  }\r\n\r\n  function hardBreak() {\r\n    return {type: 'break'}\r\n  }\r\n\r\n  function html() {\r\n    return {type: 'html', value: ''}\r\n  }\r\n\r\n  function image() {\r\n    return {type: 'image', title: null, url: '', alt: null}\r\n  }\r\n\r\n  function link() {\r\n    return {type: 'link', title: null, url: '', children: []}\r\n  }\r\n\r\n  function list(token) {\r\n    return {\r\n      type: 'list',\r\n      ordered: token.type === 'listOrdered',\r\n      start: null,\r\n      spread: token._spread,\r\n      children: []\r\n    }\r\n  }\r\n\r\n  function listItem(token) {\r\n    return {\r\n      type: 'listItem',\r\n      spread: token._spread,\r\n      checked: null,\r\n      children: []\r\n    }\r\n  }\r\n\r\n  function paragraph() {\r\n    return {type: 'paragraph', children: []}\r\n  }\r\n\r\n  function strong() {\r\n    return {type: 'strong', children: []}\r\n  }\r\n\r\n  function text() {\r\n    return {type: 'text', value: ''}\r\n  }\r\n\r\n  function thematicBreak() {\r\n    return {type: 'thematicBreak'}\r\n  }\r\n}\r\n\r\nfunction configure(config, extensions) {\r\n  var index = -1\r\n\r\n  while (++index < extensions.length) {\r\n    extension(config, extensions[index])\r\n  }\r\n\r\n  return config\r\n}\r\n\r\nfunction extension(config, extension) {\r\n  var key\r\n  var left\r\n\r\n  for (key in extension) {\r\n    left = own.call(config, key) ? config[key] : (config[key] = {})\r\n\r\n    if (key === 'canContainEols' || key === 'transforms') {\r\n      config[key] = [].concat(left, extension[key])\r\n    } else {\r\n      Object.assign(left, extension[key])\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}