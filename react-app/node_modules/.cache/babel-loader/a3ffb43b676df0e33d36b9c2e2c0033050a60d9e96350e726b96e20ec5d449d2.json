{"ast":null,"code":"'use strict';\n\nvar wrap = require('./wrap.js');\nmodule.exports = trough;\ntrough.wrap = wrap;\nvar slice = [].slice;\n\n// Create new middleware.\nfunction trough() {\n  var fns = [];\n  var middleware = {};\n  middleware.run = run;\n  middleware.use = use;\n  return middleware;\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1;\n    var input = slice.call(arguments, 0, -1);\n    var done = arguments[arguments.length - 1];\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done);\n    }\n    next.apply(null, [null].concat(input));\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index];\n      var params = slice.call(arguments, 0);\n      var values = params.slice(1);\n      var length = input.length;\n      var pos = -1;\n      if (err) {\n        done(err);\n        return;\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos];\n        }\n      }\n      input = values;\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input);\n      } else {\n        done.apply(null, [null].concat(input));\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn);\n    }\n    fns.push(fn);\n    return middleware;\n  }\n}","map":{"version":3,"names":["wrap","require","module","exports","trough","slice","fns","middleware","run","use","index","input","call","arguments","done","length","Error","next","apply","concat","err","fn","params","values","pos","undefined","push"],"sources":["G:/SoftwareDevelopment-Group-E-Project/react-app/node_modules/trough/index.js"],"sourcesContent":["'use strict'\r\n\r\nvar wrap = require('./wrap.js')\r\n\r\nmodule.exports = trough\r\n\r\ntrough.wrap = wrap\r\n\r\nvar slice = [].slice\r\n\r\n// Create new middleware.\r\nfunction trough() {\r\n  var fns = []\r\n  var middleware = {}\r\n\r\n  middleware.run = run\r\n  middleware.use = use\r\n\r\n  return middleware\r\n\r\n  // Run `fns`.  Last argument must be a completion handler.\r\n  function run() {\r\n    var index = -1\r\n    var input = slice.call(arguments, 0, -1)\r\n    var done = arguments[arguments.length - 1]\r\n\r\n    if (typeof done !== 'function') {\r\n      throw new Error('Expected function as last argument, not ' + done)\r\n    }\r\n\r\n    next.apply(null, [null].concat(input))\r\n\r\n    // Run the next `fn`, if any.\r\n    function next(err) {\r\n      var fn = fns[++index]\r\n      var params = slice.call(arguments, 0)\r\n      var values = params.slice(1)\r\n      var length = input.length\r\n      var pos = -1\r\n\r\n      if (err) {\r\n        done(err)\r\n        return\r\n      }\r\n\r\n      // Copy non-nully input into values.\r\n      while (++pos < length) {\r\n        if (values[pos] === null || values[pos] === undefined) {\r\n          values[pos] = input[pos]\r\n        }\r\n      }\r\n\r\n      input = values\r\n\r\n      // Next or done.\r\n      if (fn) {\r\n        wrap(fn, next).apply(null, input)\r\n      } else {\r\n        done.apply(null, [null].concat(input))\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add `fn` to the list.\r\n  function use(fn) {\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('Expected `fn` to be a function, not ' + fn)\r\n    }\r\n\r\n    fns.push(fn)\r\n\r\n    return middleware\r\n  }\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAW,CAAC;AAE/BC,MAAM,CAACC,OAAO,GAAGC,MAAM;AAEvBA,MAAM,CAACJ,IAAI,GAAGA,IAAI;AAElB,IAAIK,KAAK,GAAG,EAAE,CAACA,KAAK;;AAEpB;AACA,SAASD,MAAMA,CAAA,EAAG;EAChB,IAAIE,GAAG,GAAG,EAAE;EACZ,IAAIC,UAAU,GAAG,CAAC,CAAC;EAEnBA,UAAU,CAACC,GAAG,GAAGA,GAAG;EACpBD,UAAU,CAACE,GAAG,GAAGA,GAAG;EAEpB,OAAOF,UAAU;;EAEjB;EACA,SAASC,GAAGA,CAAA,EAAG;IACb,IAAIE,KAAK,GAAG,CAAC,CAAC;IACd,IAAIC,KAAK,GAAGN,KAAK,CAACO,IAAI,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAIC,IAAI,GAAGD,SAAS,CAACA,SAAS,CAACE,MAAM,GAAG,CAAC,CAAC;IAE1C,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC9B,MAAM,IAAIE,KAAK,CAAC,0CAA0C,GAAGF,IAAI,CAAC;IACpE;IAEAG,IAAI,CAACC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;;IAEtC;IACA,SAASM,IAAIA,CAACG,GAAG,EAAE;MACjB,IAAIC,EAAE,GAAGf,GAAG,CAAC,EAAEI,KAAK,CAAC;MACrB,IAAIY,MAAM,GAAGjB,KAAK,CAACO,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MACrC,IAAIU,MAAM,GAAGD,MAAM,CAACjB,KAAK,CAAC,CAAC,CAAC;MAC5B,IAAIU,MAAM,GAAGJ,KAAK,CAACI,MAAM;MACzB,IAAIS,GAAG,GAAG,CAAC,CAAC;MAEZ,IAAIJ,GAAG,EAAE;QACPN,IAAI,CAACM,GAAG,CAAC;QACT;MACF;;MAEA;MACA,OAAO,EAAEI,GAAG,GAAGT,MAAM,EAAE;QACrB,IAAIQ,MAAM,CAACC,GAAG,CAAC,KAAK,IAAI,IAAID,MAAM,CAACC,GAAG,CAAC,KAAKC,SAAS,EAAE;UACrDF,MAAM,CAACC,GAAG,CAAC,GAAGb,KAAK,CAACa,GAAG,CAAC;QAC1B;MACF;MAEAb,KAAK,GAAGY,MAAM;;MAEd;MACA,IAAIF,EAAE,EAAE;QACNrB,IAAI,CAACqB,EAAE,EAAEJ,IAAI,CAAC,CAACC,KAAK,CAAC,IAAI,EAAEP,KAAK,CAAC;MACnC,CAAC,MAAM;QACLG,IAAI,CAACI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;MACxC;IACF;EACF;;EAEA;EACA,SAASF,GAAGA,CAACY,EAAE,EAAE;IACf,IAAI,OAAOA,EAAE,KAAK,UAAU,EAAE;MAC5B,MAAM,IAAIL,KAAK,CAAC,sCAAsC,GAAGK,EAAE,CAAC;IAC9D;IAEAf,GAAG,CAACoB,IAAI,CAACL,EAAE,CAAC;IAEZ,OAAOd,UAAU;EACnB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}