{"ast":null,"code":"'use strict';\n\nmodule.exports = visitParents;\nvar convert = require('unist-util-is/convert');\nvar color = require('./color');\nvar CONTINUE = true;\nvar SKIP = 'skip';\nvar EXIT = false;\nvisitParents.CONTINUE = CONTINUE;\nvisitParents.SKIP = SKIP;\nvisitParents.EXIT = EXIT;\nfunction visitParents(tree, test, visitor, reverse) {\n  var step;\n  var is;\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  is = convert(test);\n  step = reverse ? -1 : 1;\n  factory(tree, null, [])();\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {};\n    var name;\n    if (typeof value.type === 'string') {\n      name = typeof value.tagName === 'string' ? value.tagName : typeof value.name === 'string' ? value.name : undefined;\n      visit.displayName = 'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')';\n    }\n    return visit;\n    function visit() {\n      var grandparents = parents.concat(node);\n      var result = [];\n      var subresult;\n      var offset;\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents));\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step;\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)();\n          if (subresult[0] === EXIT) {\n            return subresult;\n          }\n          offset = typeof subresult[1] === 'number' ? subresult[1] : offset + step;\n        }\n      }\n      return result;\n    }\n  }\n}\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n  return [value];\n}","map":{"version":3,"names":["module","exports","visitParents","convert","require","color","CONTINUE","SKIP","EXIT","tree","test","visitor","reverse","step","is","factory","node","index","parents","value","name","type","tagName","undefined","visit","displayName","grandparents","concat","result","subresult","offset","length","toResult","children"],"sources":["G:/SoftwareDevelopment-Group-E-Project/react-app/node_modules/unist-util-visit/node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = visitParents\r\n\r\nvar convert = require('unist-util-is/convert')\r\nvar color = require('./color')\r\n\r\nvar CONTINUE = true\r\nvar SKIP = 'skip'\r\nvar EXIT = false\r\n\r\nvisitParents.CONTINUE = CONTINUE\r\nvisitParents.SKIP = SKIP\r\nvisitParents.EXIT = EXIT\r\n\r\nfunction visitParents(tree, test, visitor, reverse) {\r\n  var step\r\n  var is\r\n\r\n  if (typeof test === 'function' && typeof visitor !== 'function') {\r\n    reverse = visitor\r\n    visitor = test\r\n    test = null\r\n  }\r\n\r\n  is = convert(test)\r\n  step = reverse ? -1 : 1\r\n\r\n  factory(tree, null, [])()\r\n\r\n  function factory(node, index, parents) {\r\n    var value = typeof node === 'object' && node !== null ? node : {}\r\n    var name\r\n\r\n    if (typeof value.type === 'string') {\r\n      name =\r\n        typeof value.tagName === 'string'\r\n          ? value.tagName\r\n          : typeof value.name === 'string'\r\n          ? value.name\r\n          : undefined\r\n\r\n      visit.displayName =\r\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\r\n    }\r\n\r\n    return visit\r\n\r\n    function visit() {\r\n      var grandparents = parents.concat(node)\r\n      var result = []\r\n      var subresult\r\n      var offset\r\n\r\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\r\n        result = toResult(visitor(node, parents))\r\n\r\n        if (result[0] === EXIT) {\r\n          return result\r\n        }\r\n      }\r\n\r\n      if (node.children && result[0] !== SKIP) {\r\n        offset = (reverse ? node.children.length : -1) + step\r\n\r\n        while (offset > -1 && offset < node.children.length) {\r\n          subresult = factory(node.children[offset], offset, grandparents)()\r\n\r\n          if (subresult[0] === EXIT) {\r\n            return subresult\r\n          }\r\n\r\n          offset =\r\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\r\n        }\r\n      }\r\n\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\nfunction toResult(value) {\r\n  if (value !== null && typeof value === 'object' && 'length' in value) {\r\n    return value\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return [CONTINUE, value]\r\n  }\r\n\r\n  return [value]\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}