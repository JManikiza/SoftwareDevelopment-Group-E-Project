{"ast":null,"code":"'use strict';\n\nvar chunkedPush = require('../util/chunked-push.js');\nvar chunkedSplice = require('../util/chunked-splice.js');\nvar classifyCharacter = require('../util/classify-character.js');\nvar movePoint = require('../util/move-point.js');\nvar resolveAll = require('../util/resolve-all.js');\nvar shallow = require('../util/shallow.js');\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\nfunction resolveAllAttention(events, context) {\n  var index = -1;\n  var open;\n  var group;\n  var text;\n  var openingSequence;\n  var closingSequence;\n  var use;\n  var nextEvents;\n  var offset; // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index; // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          } // Number of markers to use from the sequence.\n\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          };\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          };\n          events[open][1].end = shallow(openingSequence.start);\n          events[index][1].start = shallow(closingSequence.end);\n          nextEvents = []; // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]); // Between.\n\n          nextEvents = chunkedPush(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context)); // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]); // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = chunkedPush(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous);\n  var marker;\n  return start;\n  function start(code) {\n    effects.enter('attentionSequence');\n    marker = code;\n    return sequence(code);\n  }\n  function sequence(code) {\n    var token;\n    var after;\n    var open;\n    var close;\n    if (code === marker) {\n      effects.consume(code);\n      return sequence;\n    }\n    token = effects.exit('attentionSequence');\n    after = classifyCharacter(code);\n    open = !after || after === 2 && before;\n    close = !before || before === 2 && after;\n    token._open = marker === 42 ? open : open && (before || !close);\n    token._close = marker === 42 ? close : close && (after || !open);\n    return ok(code);\n  }\n}\nmodule.exports = attention;","map":{"version":3,"names":["chunkedPush","require","chunkedSplice","classifyCharacter","movePoint","resolveAll","shallow","attention","name","tokenize","tokenizeAttention","resolveAllAttention","events","context","index","open","group","text","openingSequence","closingSequence","use","nextEvents","offset","length","type","_close","_open","sliceSerialize","charCodeAt","end","start","parser","constructs","insideSpan","null","slice","effects","ok","before","previous","marker","code","enter","sequence","token","after","close","consume","exit","module","exports"],"sources":["C:/Users/wally/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/attention.js"],"sourcesContent":["'use strict'\r\n\r\nvar chunkedPush = require('../util/chunked-push.js')\r\nvar chunkedSplice = require('../util/chunked-splice.js')\r\nvar classifyCharacter = require('../util/classify-character.js')\r\nvar movePoint = require('../util/move-point.js')\r\nvar resolveAll = require('../util/resolve-all.js')\r\nvar shallow = require('../util/shallow.js')\r\n\r\nvar attention = {\r\n  name: 'attention',\r\n  tokenize: tokenizeAttention,\r\n  resolveAll: resolveAllAttention\r\n}\r\n\r\nfunction resolveAllAttention(events, context) {\r\n  var index = -1\r\n  var open\r\n  var group\r\n  var text\r\n  var openingSequence\r\n  var closingSequence\r\n  var use\r\n  var nextEvents\r\n  var offset // Walk through all events.\r\n  //\r\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\r\n  // a bottleneck for malicious stuff.\r\n\r\n  while (++index < events.length) {\r\n    // Find a token that can close.\r\n    if (\r\n      events[index][0] === 'enter' &&\r\n      events[index][1].type === 'attentionSequence' &&\r\n      events[index][1]._close\r\n    ) {\r\n      open = index // Now walk back to find an opener.\r\n\r\n      while (open--) {\r\n        // Find a token that can open the closer.\r\n        if (\r\n          events[open][0] === 'exit' &&\r\n          events[open][1].type === 'attentionSequence' &&\r\n          events[open][1]._open && // If the markers are the same:\r\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\r\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\r\n        ) {\r\n          // If the opening can close or the closing can open,\r\n          // and the close size *is not* a multiple of three,\r\n          // but the sum of the opening and closing size *is* multiple of three,\r\n          // then don’t match.\r\n          if (\r\n            (events[open][1]._close || events[index][1]._open) &&\r\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\r\n            !(\r\n              (events[open][1].end.offset -\r\n                events[open][1].start.offset +\r\n                events[index][1].end.offset -\r\n                events[index][1].start.offset) %\r\n              3\r\n            )\r\n          ) {\r\n            continue\r\n          } // Number of markers to use from the sequence.\r\n\r\n          use =\r\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\r\n            events[index][1].end.offset - events[index][1].start.offset > 1\r\n              ? 2\r\n              : 1\r\n          openingSequence = {\r\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\r\n            start: movePoint(shallow(events[open][1].end), -use),\r\n            end: shallow(events[open][1].end)\r\n          }\r\n          closingSequence = {\r\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\r\n            start: shallow(events[index][1].start),\r\n            end: movePoint(shallow(events[index][1].start), use)\r\n          }\r\n          text = {\r\n            type: use > 1 ? 'strongText' : 'emphasisText',\r\n            start: shallow(events[open][1].end),\r\n            end: shallow(events[index][1].start)\r\n          }\r\n          group = {\r\n            type: use > 1 ? 'strong' : 'emphasis',\r\n            start: shallow(openingSequence.start),\r\n            end: shallow(closingSequence.end)\r\n          }\r\n          events[open][1].end = shallow(openingSequence.start)\r\n          events[index][1].start = shallow(closingSequence.end)\r\n          nextEvents = [] // If there are more markers in the opening, add them before.\r\n\r\n          if (events[open][1].end.offset - events[open][1].start.offset) {\r\n            nextEvents = chunkedPush(nextEvents, [\r\n              ['enter', events[open][1], context],\r\n              ['exit', events[open][1], context]\r\n            ])\r\n          } // Opening.\r\n\r\n          nextEvents = chunkedPush(nextEvents, [\r\n            ['enter', group, context],\r\n            ['enter', openingSequence, context],\r\n            ['exit', openingSequence, context],\r\n            ['enter', text, context]\r\n          ]) // Between.\r\n\r\n          nextEvents = chunkedPush(\r\n            nextEvents,\r\n            resolveAll(\r\n              context.parser.constructs.insideSpan.null,\r\n              events.slice(open + 1, index),\r\n              context\r\n            )\r\n          ) // Closing.\r\n\r\n          nextEvents = chunkedPush(nextEvents, [\r\n            ['exit', text, context],\r\n            ['enter', closingSequence, context],\r\n            ['exit', closingSequence, context],\r\n            ['exit', group, context]\r\n          ]) // If there are more markers in the closing, add them after.\r\n\r\n          if (events[index][1].end.offset - events[index][1].start.offset) {\r\n            offset = 2\r\n            nextEvents = chunkedPush(nextEvents, [\r\n              ['enter', events[index][1], context],\r\n              ['exit', events[index][1], context]\r\n            ])\r\n          } else {\r\n            offset = 0\r\n          }\r\n\r\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\r\n          index = open + nextEvents.length - offset - 2\r\n          break\r\n        }\r\n      }\r\n    }\r\n  } // Remove remaining sequences.\r\n\r\n  index = -1\r\n\r\n  while (++index < events.length) {\r\n    if (events[index][1].type === 'attentionSequence') {\r\n      events[index][1].type = 'data'\r\n    }\r\n  }\r\n\r\n  return events\r\n}\r\n\r\nfunction tokenizeAttention(effects, ok) {\r\n  var before = classifyCharacter(this.previous)\r\n  var marker\r\n  return start\r\n\r\n  function start(code) {\r\n    effects.enter('attentionSequence')\r\n    marker = code\r\n    return sequence(code)\r\n  }\r\n\r\n  function sequence(code) {\r\n    var token\r\n    var after\r\n    var open\r\n    var close\r\n\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      return sequence\r\n    }\r\n\r\n    token = effects.exit('attentionSequence')\r\n    after = classifyCharacter(code)\r\n    open = !after || (after === 2 && before)\r\n    close = !before || (before === 2 && after)\r\n    token._open = marker === 42 ? open : open && (before || !close)\r\n    token._close = marker === 42 ? close : close && (after || !open)\r\n    return ok(code)\r\n  }\r\n}\r\n\r\nmodule.exports = attention\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}