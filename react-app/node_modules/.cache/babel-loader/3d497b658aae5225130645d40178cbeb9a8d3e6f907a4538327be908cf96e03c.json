{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\nvar normalizeIdentifier = require('../util/normalize-identifier.js');\nvar factoryDestination = require('./factory-destination.js');\nvar factoryLabel = require('./factory-label.js');\nvar factorySpace = require('./factory-space.js');\nvar factoryWhitespace = require('./factory-whitespace.js');\nvar factoryTitle = require('./factory-title.js');\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n};\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this;\n  var identifier;\n  return start;\n  function start(code) {\n    effects.enter('definition');\n    return factoryLabel.call(self, effects, labelAfter, nok, 'definitionLabel', 'definitionLabelMarker', 'definitionLabelString')(code);\n  }\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker'); // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(effects, factoryDestination(effects, effects.attempt(titleConstruct, factorySpace(effects, after, 'whitespace'), factorySpace(effects, after, 'whitespace')), nok, 'definitionDestination', 'definitionDestinationLiteral', 'definitionDestinationLiteralMarker', 'definitionDestinationRaw', 'definitionDestinationString'));\n    }\n    return nok(code);\n  }\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition');\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier);\n      }\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\nfunction tokenizeTitle(effects, ok, nok) {\n  return start;\n  function start(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, before)(code) : nok(code);\n  }\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, factorySpace(effects, after, 'whitespace'), nok, 'definitionTitle', 'definitionTitleMarker', 'definitionTitleString')(code);\n    }\n    return nok(code);\n  }\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}\nmodule.exports = definition;","map":{"version":3,"names":["markdownLineEnding","require","markdownLineEndingOrSpace","normalizeIdentifier","factoryDestination","factoryLabel","factorySpace","factoryWhitespace","factoryTitle","definition","name","tokenize","tokenizeDefinition","titleConstruct","tokenizeTitle","partial","effects","ok","nok","self","identifier","start","code","enter","call","labelAfter","sliceSerialize","events","length","slice","consume","exit","attempt","after","parser","defined","indexOf","push","before","module","exports"],"sources":["/Users/wallysonsilva/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/definition.js"],"sourcesContent":["'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}