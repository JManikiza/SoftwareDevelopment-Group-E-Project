{"ast":null,"code":"'use strict';\n\nvar slice = [].slice;\nmodule.exports = wrap;\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked;\n  return wrapped;\n  function wrapped() {\n    var params = slice.call(arguments, 0);\n    var callback = fn.length > params.length;\n    var result;\n    if (callback) {\n      params.push(done);\n    }\n    try {\n      result = fn.apply(null, params);\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error;\n      }\n      return done(error);\n    }\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true;\n      callback.apply(null, arguments);\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value);\n  }\n}","map":{"version":3,"names":["slice","module","exports","wrap","fn","callback","invoked","wrapped","params","call","arguments","length","result","push","done","apply","error","then","Error","value"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/trough/wrap.js"],"sourcesContent":["'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAG,EAAE,CAACA,KAAK;AAEpBC,MAAM,CAACC,OAAO,GAAGC,IAAI;;AAErB;AACA;AACA;AACA,SAASA,IAAIA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EAC1B,IAAIC,OAAO;EAEX,OAAOC,OAAO;EAEd,SAASA,OAAOA,CAAA,EAAG;IACjB,IAAIC,MAAM,GAAGR,KAAK,CAACS,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;IACrC,IAAIL,QAAQ,GAAGD,EAAE,CAACO,MAAM,GAAGH,MAAM,CAACG,MAAM;IACxC,IAAIC,MAAM;IAEV,IAAIP,QAAQ,EAAE;MACZG,MAAM,CAACK,IAAI,CAACC,IAAI,CAAC;IACnB;IAEA,IAAI;MACFF,MAAM,GAAGR,EAAE,CAACW,KAAK,CAAC,IAAI,EAAEP,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd;MACA;MACA;MACA;MACA;MACA,IAAIX,QAAQ,IAAIC,OAAO,EAAE;QACvB,MAAMU,KAAK;MACb;MAEA,OAAOF,IAAI,CAACE,KAAK,CAAC;IACpB;IAEA,IAAI,CAACX,QAAQ,EAAE;MACb,IAAIO,MAAM,IAAI,OAAOA,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;QAC/CL,MAAM,CAACK,IAAI,CAACA,IAAI,EAAEH,IAAI,CAAC;MACzB,CAAC,MAAM,IAAIF,MAAM,YAAYM,KAAK,EAAE;QAClCJ,IAAI,CAACF,MAAM,CAAC;MACd,CAAC,MAAM;QACLK,IAAI,CAACL,MAAM,CAAC;MACd;IACF;EACF;;EAEA;EACA,SAASE,IAAIA,CAAA,EAAG;IACd,IAAI,CAACR,OAAO,EAAE;MACZA,OAAO,GAAG,IAAI;MAEdD,QAAQ,CAACU,KAAK,CAAC,IAAI,EAAEL,SAAS,CAAC;IACjC;EACF;;EAEA;EACA;EACA,SAASO,IAAIA,CAACE,KAAK,EAAE;IACnBL,IAAI,CAAC,IAAI,EAAEK,KAAK,CAAC;EACnB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}