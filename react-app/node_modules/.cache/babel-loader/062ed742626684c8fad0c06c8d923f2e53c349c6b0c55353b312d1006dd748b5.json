{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\sdgp\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\LoginComponents\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jq from \"jquery\";\nimport { Main, Fieldset, InputField, Button, InsetText, Link } from \"govuk-react\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPw, setValidPw] = useState(false);\n  const [registered, setRegistered] = useState(false);\n  const [pwMatched, setPwMatched] = useState(false);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const handleButtonClick = () => {\n    setButtonClicked(true);\n  };\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (isLoggedIn) {\n      setTimeout(() => {\n        navigate(\"/Patient\");\n      }, 1000);\n    }\n    // Clear localStorage on page unload\n    const handlePageUnload = () => {\n      localStorage.clear();\n      sessionStorage.clear();\n    };\n    window.addEventListener(\"beforeunload\", handlePageUnload);\n    return () => window.removeEventListener(\"beforeunload\", handlePageUnload);\n  }, [isLoggedIn, navigate]);\n  const submitFormHandler = e => {\n    e.preventDefault();\n\n    //Retrieve data from db\n    jq.ajax({\n      url: \"http://localhost:4000/patientlogindata.php\",\n      type: \"POST\",\n      data: {\n        email: email,\n        password: password\n      },\n      dataType: \"json\",\n      success: function (response) {\n        if (response === \"no patients\") {\n          setRegistered(false);\n          console.error(\"No patients found.\");\n        } else if (response.email === email) {\n          setRegistered(true);\n          if (response.passwordMatch === true) {\n            setPwMatched(true);\n            let patientName = response.patientName;\n            let nhsNo = response.nhsNo;\n            let session_token = response.session_token;\n            localStorage.setItem(\"patientName\", patientName);\n            localStorage.setItem(\"nhsNo\", nhsNo);\n            sessionStorage.setItem(\"session_token\", session_token); // Store session token in session storage\n\n            console.log(\"Patient name: \" + patientName);\n            console.log(\"NHS no: \" + nhsNo);\n            setIsLoggedIn(true);\n            setButtonClicked(false);\n            setTimeout(() => {\n              navigate(\"/Patient\");\n            }, 2000); // 2 second delay\n          }\n        } else {\n          setRegistered(false);\n        }\n      },\n      error: function (error) {\n        console.log(error);\n        // handle error here\n      }\n    });\n  };\n\n  //Input validation\n  const emailHandler = e => {\n    let input = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (emailRegex.test(input)) {\n      setEmail(input);\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  //Input validation\n  const pwHandler = e => {\n    let input = e.target.value;\n    setPassword(input);\n    if (input.length > 4) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  };\n  let bool = !registered && buttonClicked;\n\n  // if user already logged in, display redirect message\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: \"Redirecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFormHandler,\n        children: /*#__PURE__*/_jsxDEV(Fieldset, {\n          children: [/*#__PURE__*/_jsxDEV(Fieldset.Legend, {\n            size: \"LARGE\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            padding: 3,\n            onChange: emailHandler,\n            value: email,\n            input: {\n              name: \"email\",\n              type: \"email\"\n            },\n            meta: {\n              error: 'Email not found',\n              touched: bool\n            },\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            padding: 3,\n            onChange: pwHandler,\n            value: password,\n            input: {\n              name: \"password\",\n              type: \"password\"\n            },\n            meta: {\n              error: 'Incorrect password',\n              touched: registered && !pwMatched && buttonClicked\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            margin: 3,\n            disabled: !validEmail || !validPw,\n            onClick: handleButtonClick,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: [\"New patient? Register\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/NhsNumber\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InsetText, {\n        margin: 3,\n        children: [\"Staff login\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/stafflogin\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"OGnjvjE54FbZEOmu7cM23JRbqjE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","jq","Main","Fieldset","InputField","Button","InsetText","Link","AuthContext","jsxDEV","_jsxDEV","LoginForm","_s","navigate","email","setEmail","password","setPassword","validEmail","setValidEmail","validPw","setValidPw","registered","setRegistered","pwMatched","setPwMatched","buttonClicked","setButtonClicked","handleButtonClick","isLoggedIn","setIsLoggedIn","setTimeout","handlePageUnload","localStorage","clear","sessionStorage","window","addEventListener","removeEventListener","submitFormHandler","e","preventDefault","ajax","url","type","data","dataType","success","response","console","error","passwordMatch","patientName","nhsNo","session_token","setItem","log","emailHandler","input","target","value","emailRegex","test","pwHandler","length","bool","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Legend","size","padding","onChange","name","meta","touched","disabled","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Desktop/sdgp/SoftwareDevelopment-Group-E-Project/react-app/src/Components/LoginComponents/LoginForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport jq from \"jquery\";\r\nimport {  Main, Fieldset, InputField, Button, InsetText, Link } from \"govuk-react\";\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nfunction LoginForm() {\r\n  const navigate = useNavigate();\r\n \r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [validPw, setValidPw] = useState(false);\r\n\r\n  const [registered, setRegistered] = useState(false);\r\n  const [pwMatched, setPwMatched] = useState(false);\r\n\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setButtonClicked(true);\r\n  }\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n  \r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setTimeout(() => {\r\n        navigate(\"/Patient\");\r\n      }, 1000);\r\n    }\r\n    // Clear localStorage on page unload\r\n    const handlePageUnload = () => {\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n    };\r\n    window.addEventListener(\"beforeunload\", handlePageUnload);\r\n    return () => window.removeEventListener(\"beforeunload\", handlePageUnload);\r\n  }, [isLoggedIn, navigate]);\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Retrieve data from db\r\n    jq.ajax({\r\n      url: \"http://localhost:4000/patientlogindata.php\",\r\n      type: \"POST\",\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      dataType: \"json\",\r\n      success: function (response) {\r\n        if (response === \"no patients\") {\r\n          setRegistered(false);\r\n          console.error(\"No patients found.\");\r\n        } else if (response.email === email) {\r\n          setRegistered(true);\r\n          if (response.passwordMatch === true) {\r\n            setPwMatched(true);\r\n            let patientName = response.patientName;\r\n            let nhsNo = response.nhsNo;\r\n            let session_token = response.session_token;\r\n\r\n            localStorage.setItem(\"patientName\", patientName);\r\n            localStorage.setItem(\"nhsNo\", nhsNo);\r\n            sessionStorage.setItem(\"session_token\", session_token); // Store session token in session storage\r\n\r\n            console.log(\"Patient name: \" + patientName);\r\n            console.log(\"NHS no: \" + nhsNo);\r\n\r\n            setIsLoggedIn(true);\r\n            setButtonClicked(false);\r\n\r\n            setTimeout(() => {\r\n              navigate(\"/Patient\");\r\n            }, 2000); // 2 second delay\r\n          }\r\n        } else {\r\n          setRegistered(false);\r\n        }\r\n      },\r\n      error: function (error) {\r\n        console.log(error);\r\n        // handle error here\r\n      },\r\n    });\r\n  };\r\n\r\n  //Input validation\r\n  const emailHandler = (e) => {\r\n    let input = e.target.value;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (emailRegex.test(input)) {\r\n      setEmail(input);\r\n      setValidEmail(true);\r\n    } else {\r\n      setValidEmail(false);\r\n    }\r\n  };\r\n\r\n  //Input validation\r\n  const pwHandler = (e) => {\r\n    let input = e.target.value;\r\n    setPassword(input);\r\n    if (input.length > 4) {\r\n      setValidPw(true);\r\n    } else {\r\n      setValidPw(false);\r\n    }\r\n  };\r\n\r\n  let bool = !registered && buttonClicked;\r\n\r\n  // if user already logged in, display redirect message\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Main>\r\n        <InsetText margin={3}>Redirecting...</InsetText>\r\n      </Main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <form onSubmit={submitFormHandler}>\r\n          <Fieldset>\r\n            <Fieldset.Legend size=\"LARGE\">Login</Fieldset.Legend>\r\n            <InputField\r\n              padding={3}\r\n              onChange={emailHandler}\r\n              value={email}\r\n              input={{\r\n                name: \"email\",\r\n                type: \"email\",\r\n              }}\r\n              meta={{\r\n                error: 'Email not found',\r\n                touched: bool,\r\n              }}\r\n            >\r\n              Email address\r\n            </InputField> \r\n            <InputField\r\n              padding={3}\r\n              onChange={pwHandler}\r\n              value={password}\r\n              input={{\r\n                name: \"password\",\r\n                type: \"password\",\r\n              }}\r\n              meta={{\r\n                error: 'Incorrect password',\r\n                touched: registered && !pwMatched && buttonClicked\r\n              }}\r\n            >\r\n              Password\r\n            </InputField>\r\n            <Button type=\"submit\" margin={3} disabled={!validEmail || !validPw} onClick={ handleButtonClick }>\r\n              Continue\r\n            </Button>\r\n          </Fieldset>\r\n        </form>\r\n\r\n        <br />\r\n        <InsetText margin={3}>\r\n          New patient? Register&nbsp;\r\n          <Link href=\"/NhsNumber\">here</Link>\r\n        </InsetText>\r\n        <InsetText margin={3}>\r\n          Staff login&nbsp;\r\n          <Link href=\"/stafflogin\">here</Link>\r\n        </InsetText>\r\n        <br />\r\n        <br />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}