{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar markdownSpace = require('../character/markdown-space.js');\nvar factorySpace = require('./factory-space.js');\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0;\n  var marker;\n  return start;\n  function start(code) {\n    effects.enter('thematicBreak');\n    marker = code;\n    return atBreak(code);\n  }\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence');\n      return sequence(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code);\n    }\n    if (size < 3 || code !== null && !markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.exit('thematicBreak');\n    return ok(code);\n  }\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit('thematicBreakSequence');\n    return atBreak(code);\n  }\n}\nmodule.exports = thematicBreak;","map":{"version":3,"names":["markdownLineEnding","require","markdownSpace","factorySpace","thematicBreak","name","tokenize","tokenizeThematicBreak","effects","ok","nok","size","marker","start","code","enter","atBreak","sequence","exit","consume","module","exports"],"sources":["D:/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/thematic-break.js"],"sourcesContent":["'use strict'\r\n\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\nvar markdownSpace = require('../character/markdown-space.js')\r\nvar factorySpace = require('./factory-space.js')\r\n\r\nvar thematicBreak = {\r\n  name: 'thematicBreak',\r\n  tokenize: tokenizeThematicBreak\r\n}\r\n\r\nfunction tokenizeThematicBreak(effects, ok, nok) {\r\n  var size = 0\r\n  var marker\r\n  return start\r\n\r\n  function start(code) {\r\n    effects.enter('thematicBreak')\r\n    marker = code\r\n    return atBreak(code)\r\n  }\r\n\r\n  function atBreak(code) {\r\n    if (code === marker) {\r\n      effects.enter('thematicBreakSequence')\r\n      return sequence(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      return factorySpace(effects, atBreak, 'whitespace')(code)\r\n    }\r\n\r\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.exit('thematicBreak')\r\n    return ok(code)\r\n  }\r\n\r\n  function sequence(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      size++\r\n      return sequence\r\n    }\r\n\r\n    effects.exit('thematicBreakSequence')\r\n    return atBreak(code)\r\n  }\r\n}\r\n\r\nmodule.exports = thematicBreak\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sCAAsC,CAAC;AACxE,IAAIC,aAAa,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAC7D,IAAIE,YAAY,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAEhD,IAAIG,aAAa,GAAG;EAClBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAEC;AACZ,CAAC;AAED,SAASA,qBAAqBA,CAACC,OAAO,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAC/C,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM;EACV,OAAOC,KAAK;EAEZ,SAASA,KAAKA,CAACC,IAAI,EAAE;IACnBN,OAAO,CAACO,KAAK,CAAC,eAAe,CAAC;IAC9BH,MAAM,GAAGE,IAAI;IACb,OAAOE,OAAO,CAACF,IAAI,CAAC;EACtB;EAEA,SAASE,OAAOA,CAACF,IAAI,EAAE;IACrB,IAAIA,IAAI,KAAKF,MAAM,EAAE;MACnBJ,OAAO,CAACO,KAAK,CAAC,uBAAuB,CAAC;MACtC,OAAOE,QAAQ,CAACH,IAAI,CAAC;IACvB;IAEA,IAAIZ,aAAa,CAACY,IAAI,CAAC,EAAE;MACvB,OAAOX,YAAY,CAACK,OAAO,EAAEQ,OAAO,EAAE,YAAY,CAAC,CAACF,IAAI,CAAC;IAC3D;IAEA,IAAIH,IAAI,GAAG,CAAC,IAAKG,IAAI,KAAK,IAAI,IAAI,CAACd,kBAAkB,CAACc,IAAI,CAAE,EAAE;MAC5D,OAAOJ,GAAG,CAACI,IAAI,CAAC;IAClB;IAEAN,OAAO,CAACU,IAAI,CAAC,eAAe,CAAC;IAC7B,OAAOT,EAAE,CAACK,IAAI,CAAC;EACjB;EAEA,SAASG,QAAQA,CAACH,IAAI,EAAE;IACtB,IAAIA,IAAI,KAAKF,MAAM,EAAE;MACnBJ,OAAO,CAACW,OAAO,CAACL,IAAI,CAAC;MACrBH,IAAI,EAAE;MACN,OAAOM,QAAQ;IACjB;IAEAT,OAAO,CAACU,IAAI,CAAC,uBAAuB,CAAC;IACrC,OAAOF,OAAO,CAACF,IAAI,CAAC;EACtB;AACF;AAEAM,MAAM,CAACC,OAAO,GAAGjB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}