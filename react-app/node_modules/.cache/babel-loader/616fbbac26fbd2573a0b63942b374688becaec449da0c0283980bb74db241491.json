{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\GPComponents\\\\DoctorsAvailable\\\\DoctorTab.js\",\n  _s = $RefreshSig$();\nimport { Table, Tabs, H2 } from \"govuk-react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorTab() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/GPS_Doc_Avail.php').then(response => response.json()).then(data => {\n      setDoctors(data);\n      setData({\n        fullName: data[0].Forename + ' ' + data[0].Surname,\n        dob: new Date(data[0].PersonDOB).toLocaleDateString('en-GB', {\n          day: 'numeric',\n          month: 'numeric',\n          year: 'numeric'\n        }),\n        gender: data[0].GenderCode === '1' ? 'MALE' : 'FEMALE',\n        address: data[0].Postcode,\n        email: data[0].EmailAddress,\n        number: data[0].PhoneNumber.length === 10 ? '0' + data[0].PhoneNumber : data[0].PhoneNumber\n      });\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(H2, {\n      children: \"Doctors Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      head: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.CellHeader, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.CellHeader, {\n          children: \"Specialisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.CellHeader, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.CellHeader, {\n          children: \"Contact No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this),\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: [\"DR.\", doctor.empLName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: doctor.Specialisation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: doctor.empEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: doctor.empPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, doctor.empID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorTab, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = DoctorTab;\nexport default DoctorTab;\nvar _c;\n$RefreshReg$(_c, \"DoctorTab\");","map":{"version":3,"names":["Table","Tabs","H2","useState","useEffect","jsxDEV","_jsxDEV","DoctorTab","_s","doctors","setDoctors","fetch","then","response","json","data","setData","fullName","Forename","Surname","dob","Date","PersonDOB","toLocaleDateString","day","month","year","gender","GenderCode","address","Postcode","email","EmailAddress","number","PhoneNumber","length","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","head","Row","CellHeader","map","doctor","Cell","empLName","Specialisation","empEmail","empPhone","empID","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/GPComponents/DoctorsAvailable/DoctorTab.js"],"sourcesContent":["import { Table, Tabs, H2 } from \"govuk-react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction DoctorTab() {\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/GPS_Doc_Avail.php')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setDoctors(data);\r\n         setData({\r\n        fullName: data[0].Forename + ' ' + data[0].Surname,\r\n          dob: new Date(data[0].PersonDOB).toLocaleDateString('en-GB', { day: 'numeric', month: 'numeric', year: 'numeric' }),        gender: data[0].GenderCode === '1' ? 'MALE' : 'FEMALE',\r\n        address: data[0].Postcode,\r\n        email: data[0].EmailAddress,\r\n        number: data[0].PhoneNumber.length === 10 ? '0' + data[0].PhoneNumber : data[0].PhoneNumber, \r\n           });\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <H2>Doctors Available</H2>\r\n      <Table head={\r\n        <Table.Row>\r\n          <Table.CellHeader>Name</Table.CellHeader>\r\n          <Table.CellHeader>Specialisation</Table.CellHeader>\r\n          <Table.CellHeader>Email</Table.CellHeader>\r\n          <Table.CellHeader>Contact No.</Table.CellHeader>\r\n        </Table.Row>\r\n      }>\r\n        {doctors.map(doctor => (\r\n          <Table.Row key={doctor.empID}>\r\n            <Table.Cell>DR.{doctor.empLName}</Table.Cell>\r\n            <Table.Cell>{doctor.Specialisation}</Table.Cell>\r\n            <Table.Cell>{doctor.empEmail}</Table.Cell>\r\n            <Table.Cell>{doctor.empPhone}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorTab;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}