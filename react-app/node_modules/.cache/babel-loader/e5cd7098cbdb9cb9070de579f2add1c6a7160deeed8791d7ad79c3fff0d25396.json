{"ast":null,"code":"'use strict';\n\nvar splice = require('../constant/splice.js');\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length;\n  var chunkStart = 0;\n  var parameters; // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0; // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    splice.apply(list, parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]); // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      splice.apply(list, parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\nmodule.exports = chunkedSplice;","map":{"version":3,"names":["splice","require","chunkedSplice","list","start","remove","items","end","length","chunkStart","parameters","Array","from","unshift","apply","slice","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/util/chunked-splice.js"],"sourcesContent":["'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAE7C;;AAEA,SAASC,aAAaA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAE;EACjD,IAAIC,GAAG,GAAGJ,IAAI,CAACK,MAAM;EACrB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,UAAU,EAAC;;EAEf,IAAIN,KAAK,GAAG,CAAC,EAAE;IACbA,KAAK,GAAG,CAACA,KAAK,GAAGG,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAGH,KAAK;EACxC,CAAC,MAAM;IACLA,KAAK,GAAGA,KAAK,GAAGG,GAAG,GAAGA,GAAG,GAAGH,KAAK;EACnC;EAEAC,MAAM,GAAGA,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC,EAAC;;EAEjC,IAAIC,KAAK,CAACE,MAAM,GAAG,KAAK,EAAE;IACxBE,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACN,KAAK,CAAC;IAC9BI,UAAU,CAACG,OAAO,CAACT,KAAK,EAAEC,MAAM,CAAC;IACjCL,MAAM,CAACc,KAAK,CAACX,IAAI,EAAEO,UAAU,CAAC;EAChC,CAAC,MAAM;IACL;IACA,IAAIL,MAAM,EAAEL,MAAM,CAACc,KAAK,CAACX,IAAI,EAAE,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAC,EAAC;;IAEhD,OAAOI,UAAU,GAAGH,KAAK,CAACE,MAAM,EAAE;MAChCE,UAAU,GAAGJ,KAAK,CAACS,KAAK,CAACN,UAAU,EAAEA,UAAU,GAAG,KAAK,CAAC;MACxDC,UAAU,CAACG,OAAO,CAACT,KAAK,EAAE,CAAC,CAAC;MAC5BJ,MAAM,CAACc,KAAK,CAACX,IAAI,EAAEO,UAAU,CAAC;MAC9BD,UAAU,IAAI,KAAK;MACnBL,KAAK,IAAI,KAAK;IAChB;EACF;AACF;AAEAY,MAAM,CAACC,OAAO,GAAGf,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}