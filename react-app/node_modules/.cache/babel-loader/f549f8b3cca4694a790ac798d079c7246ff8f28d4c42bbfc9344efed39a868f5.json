{"ast":null,"code":"'use strict';\n\nvar decodeEntity = require('parse-entities/decode-entity.js');\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js');\nvar asciiDigit = require('../character/ascii-digit.js');\nvar asciiHexDigit = require('../character/ascii-hex-digit.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n}\nvar decodeEntity__default = /*#__PURE__*/_interopDefaultLegacy(decodeEntity);\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this;\n  var size = 0;\n  var max;\n  var test;\n  return start;\n  function start(code) {\n    effects.enter('characterReference');\n    effects.enter('characterReferenceMarker');\n    effects.consume(code);\n    effects.exit('characterReferenceMarker');\n    return open;\n  }\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerNumeric');\n      return numeric;\n    }\n    effects.enter('characterReferenceValue');\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerHexadecimal');\n      effects.enter('characterReferenceValue');\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter('characterReferenceValue');\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n  function value(code) {\n    var token;\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue');\n      if (test === asciiAlphanumeric && !decodeEntity__default['default'](self.sliceSerialize(token))) {\n        return nok(code);\n      }\n      effects.enter('characterReferenceMarker');\n      effects.consume(code);\n      effects.exit('characterReferenceMarker');\n      effects.exit('characterReference');\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}\nmodule.exports = characterReference;","map":{"version":3,"names":["decodeEntity","require","asciiAlphanumeric","asciiDigit","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","characterReference","name","tokenize","tokenizeCharacterReference","effects","ok","nok","self","size","max","test","start","code","enter","consume","exit","open","numeric","value","token","sliceSerialize","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/character-reference.js"],"sourcesContent":["'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}