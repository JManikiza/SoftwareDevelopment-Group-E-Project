{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMani\\\\Documents\\\\GitHub\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\PatientPageComponents\\\\ProfileChanges\\\\DOBChanges\\\\DOBChangeEnter.js\",\n  _s = $RefreshSig$();\n/**\r\n * Author(s) of this code:\r\n *\r\n * Joven Manikiza\r\n */\n\nimport React, { useState } from \"react\";\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../../../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DOBChangeEnter() {\n  _s();\n  const navigate = useNavigate();\n  const [dob, setDOB] = useState(null);\n\n  // This function handles the form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // If dob is not null or undefined\n    if (dob) {\n      // Extract the day, month, and year from the input string\n      const day = dob.substring(0, 2);\n      const month = dob.substring(3, 5);\n      const year = dob.substring(6, 10);\n\n      // Create a new date object with the extracted values\n      const dateObject = new Date(year, month - 1, day);\n\n      // If the date object is valid\n      if (!isNaN(dateObject.getTime())) {\n        // Navigate to the confirmation page with the date object\n        navigate(\"/DOBChangeConfirmation\", {\n          state: {\n            dob: dateObject\n          }\n        });\n        console.log(dateObject);\n      } else {\n        // If the date is not valid, show an error message\n        alert(\"Please enter a valid date of birth.\");\n      }\n    } else {\n      // If dob is null or undefined, show an error message\n      alert(\"Please enter a valid date of birth.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      pageLink1: \"/\",\n      PageName1: \"home\",\n      pageLink2: \"/login\",\n      PageName2: \"Login\",\n      pageLink3: \"/NhsNumber\",\n      PageName3: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DateField, {\n          hintText: \"For example, 31 03 1980\",\n          input: {\n            name: \"dob\",\n            onChange: value => setDOB(value)\n          },\n          meta: {\n            touched: true,\n            error: !dob ? \"Please enter a valid date of birth.\" : undefined\n          },\n          children: \"What is your date of birth?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {\n          level: \"SMALL\",\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/Profile\"),\n          buttonColour: \"GREY\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(DOBChangeEnter, \"0X4yzDQey3JLrlh4X/UqYcu6UKA=\", false, function () {\n  return [useNavigate];\n});\n_c = DOBChangeEnter;\nexport default DOBChangeEnter;\nvar _c;\n$RefreshReg$(_c, \"DOBChangeEnter\");","map":{"version":3,"names":["React","useState","DateField","Main","Button","SectionBreak","useNavigate","Navigation","jsxDEV","_jsxDEV","DOBChangeEnter","_s","navigate","dob","setDOB","handleSubmit","e","preventDefault","day","substring","month","year","dateObject","Date","isNaN","getTime","state","console","log","alert","children","pageLink1","PageName1","pageLink2","PageName2","pageLink3","PageName3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","hintText","input","name","onChange","value","meta","touched","error","undefined","level","visible","onClick","buttonColour","_c","$RefreshReg$"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/src/Components/PatientPageComponents/ProfileChanges/DOBChanges/DOBChangeEnter.js"],"sourcesContent":["/**\r\n * Author(s) of this code:\r\n *\r\n * Joven Manikiza\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DateField, Main, Button, SectionBreak } from \"govuk-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navigation from \"../../../Navigation\";\r\n\r\nfunction DOBChangeEnter() {\r\n\r\n  const navigate = useNavigate();\r\n  const [dob, setDOB] = useState(null);\r\n\r\n  // This function handles the form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // If dob is not null or undefined\r\n    if (dob) {\r\n      // Extract the day, month, and year from the input string\r\n      const day = dob.substring(0, 2);\r\n      const month = dob.substring(3, 5);\r\n      const year = dob.substring(6, 10);\r\n\r\n      // Create a new date object with the extracted values\r\n      const dateObject = new Date(year, month - 1, day);\r\n\r\n      // If the date object is valid\r\n      if (!isNaN(dateObject.getTime())) {\r\n        // Navigate to the confirmation page with the date object\r\n        navigate(\"/DOBChangeConfirmation\", { state: { dob: dateObject } });\r\n        console.log(dateObject);\r\n      } else {\r\n        // If the date is not valid, show an error message\r\n        alert(\"Please enter a valid date of birth.\");\r\n      }\r\n    } else {\r\n      // If dob is null or undefined, show an error message\r\n      alert(\"Please enter a valid date of birth.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the navigation menu */}\r\n      <Navigation\r\n        pageLink1=\"/\"\r\n        PageName1=\"home\"\r\n        pageLink2=\"/login\"\r\n        PageName2=\"Login\"\r\n        pageLink3=\"/NhsNumber\"\r\n        PageName3=\"Register\"\r\n      />\r\n\r\n      <Main>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Render the date field */}\r\n          <DateField\r\n            hintText=\"For example, 31 03 1980\"\r\n            input={{\r\n              name: \"dob\",\r\n              onChange: (value) => setDOB(value),\r\n            }}\r\n            meta={{\r\n              touched: true,\r\n              error: !dob ? \"Please enter a valid date of birth.\" : undefined,\r\n            }}\r\n          >\r\n            What is your date of birth?\r\n          </DateField>\r\n\r\n          {/* Render the submit button */}\r\n          <Button>Continue</Button>\r\n\r\n          {/* Render the cancel button */}\r\n          <SectionBreak level=\"SMALL\" visible={false} />\r\n          <Button onClick={() => navigate(\"/Profile\")} buttonColour=\"GREY\">\r\n            Cancel\r\n          </Button>\r\n        </form>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DOBChangeEnter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}