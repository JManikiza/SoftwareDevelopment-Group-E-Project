{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\nvar markdownSpace = require('../character/markdown-space.js');\nvar chunkedSplice = require('../util/chunked-splice.js');\nvar factorySpace = require('./factory-space.js');\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2;\n  var contentStart = 3;\n  var content;\n  var text; // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2;\n  } // Suffix whitespace, part of the closing.\n\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === 'whitespace') {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === 'atxHeadingSequence' && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === 'whitespace')) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    };\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this;\n  var size = 0;\n  return start;\n  function start(code) {\n    effects.enter('atxHeading');\n    effects.enter('atxHeadingSequence');\n    return fenceOpenInside(code);\n  }\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return fenceOpenInside;\n    }\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence');\n      return self.interrupt ? ok(code) : headingBreak(code);\n    }\n    return nok(code);\n  }\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence');\n      return sequence(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code);\n    }\n    effects.enter('atxHeadingText');\n    return data(code);\n  }\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequence;\n    }\n    effects.exit('atxHeadingSequence');\n    return headingBreak(code);\n  }\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText');\n      return headingBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}\nmodule.exports = headingAtx;","map":{"version":3,"names":["markdownLineEnding","require","markdownLineEndingOrSpace","markdownSpace","chunkedSplice","factorySpace","headingAtx","name","tokenize","tokenizeHeadingAtx","resolve","resolveHeadingAtx","events","context","contentEnd","length","contentStart","content","text","type","start","end","contentType","effects","ok","nok","self","size","code","enter","fenceOpenInside","consume","exit","interrupt","headingBreak","sequence","data","module","exports"],"sources":["C:/Users/JMani/Documents/GitHub/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/tokenize/heading-atx.js"],"sourcesContent":["'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}