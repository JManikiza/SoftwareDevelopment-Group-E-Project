{"ast":null,"code":"var _jsxFileName = \"D:\\\\SoftwareDevelopment-Group-E-Project\\\\react-app\\\\src\\\\Components\\\\Temp\\\\MyBtn.js\";\nimport { Button } from \"govuk-react\";\nimport { CurrentContext } from \"../../Pages/Temp\";\nimport jq from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyBtn(props) {\n  function getPatientData() {\n    var patientData = {\n      nhsNo: CurrentContext.nhsNo\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const options = {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(patientData)\n    };\n\n    // Use HTTPS instead of HTTP\n    const url = \"https://localhost:4000/getpatientdata.php\";\n    fetch(url, options).then(response => response.json()).then(data => {\n      console.log(data);\n      if (data === \"no patients\") {\n        alert(\"no patients\");\n      } else {\n        // Sanitize output\n        var json = jq.parseJSON(data);\n        var a = json[0].NHSNumber;\n        alert(a);\n      }\n    }).catch(error => console.error(error));\n  }\n\n  // Check for authentication before accessing patient data\n  if (sessionToken) {\n    getPatientData();\n  } else {\n    alert(\"Please log in to access patient data.\");\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: getPatientData,\n    children: \" Submit \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = MyBtn;\nexport default MyBtn;\nvar _c;\n$RefreshReg$(_c, \"MyBtn\");","map":{"version":3,"names":["Button","CurrentContext","jq","jsxDEV","_jsxDEV","MyBtn","props","getPatientData","patientData","nhsNo","headers","options","method","body","JSON","stringify","url","fetch","then","response","json","data","console","log","alert","parseJSON","a","NHSNumber","catch","error","sessionToken","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SoftwareDevelopment-Group-E-Project/react-app/src/Components/Temp/MyBtn.js"],"sourcesContent":["import { Button } from \"govuk-react\";\r\nimport { CurrentContext } from \"../../Pages/Temp\";\r\n\r\nimport jq from \"jquery\";\r\n\r\nfunction MyBtn(props) {\r\n  function getPatientData() {\r\n    var patientData = {\r\n      nhsNo: CurrentContext.nhsNo,\r\n    };\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const options = {\r\n      method: 'POST',\r\n      headers: headers,\r\n      body: JSON.stringify(patientData),\r\n    };\r\n    \r\n    // Use HTTPS instead of HTTP\r\n    const url = \"https://localhost:4000/getpatientdata.php\";\r\n\r\n    fetch(url, options)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"no patients\") {\r\n          alert(\"no patients\")\r\n        } else {\r\n          // Sanitize output\r\n          var json = jq.parseJSON(data);\r\n          var a=json[0].NHSNumber;\r\n          alert(a);\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n  \r\n  // Check for authentication before accessing patient data\r\n  if (sessionToken) {\r\n    getPatientData();\r\n  } else {\r\n    alert(\"Please log in to access patient data.\");\r\n  }\r\n\r\n\r\n\r\n  return <Button onClick={getPatientData}> Submit </Button>;\r\n}\r\n\r\nexport default MyBtn;\r\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAOC,EAAE,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,SAASC,cAAcA,CAAA,EAAG;IACxB,IAAIC,WAAW,GAAG;MAChBC,KAAK,EAAER,cAAc,CAACQ;IACxB,CAAC;IACD,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE;IAClB,CAAC;IACD,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdF,OAAO,EAAEA,OAAO;MAChBG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC;;IAED;IACA,MAAMQ,GAAG,GAAG,2CAA2C;IAEvDC,KAAK,CAACD,GAAG,EAAEL,OAAO,CAAC,CAChBO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIA,IAAI,KAAK,aAAa,EAAE;QAC1BG,KAAK,CAAC,aAAa,CAAC;MACtB,CAAC,MAAM;QACL;QACA,IAAIJ,IAAI,GAAGlB,EAAE,CAACuB,SAAS,CAACJ,IAAI,CAAC;QAC7B,IAAIK,CAAC,GAACN,IAAI,CAAC,CAAC,CAAC,CAACO,SAAS;QACvBH,KAAK,CAACE,CAAC,CAAC;MACV;IACF,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC;;EAEA;EACA,IAAIC,YAAY,EAAE;IAChBvB,cAAc,EAAE;EAClB,CAAC,MAAM;IACLiB,KAAK,CAAC,uCAAuC,CAAC;EAChD;EAIA,oBAAOpB,OAAA,CAACJ,MAAM;IAAC+B,OAAO,EAAExB,cAAe;IAAAyB,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAC3D;AAACC,EAAA,GA3CQhC,KAAK;AA6Cd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}