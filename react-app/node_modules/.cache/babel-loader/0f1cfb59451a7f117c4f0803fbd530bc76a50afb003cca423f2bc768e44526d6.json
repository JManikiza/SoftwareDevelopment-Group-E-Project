{"ast":null,"code":"'use strict';\n\nvar content = require('./initialize/content.js');\nvar document = require('./initialize/document.js');\nvar flow = require('./initialize/flow.js');\nvar text = require('./initialize/text.js');\nvar combineExtensions = require('./util/combine-extensions.js');\nvar createTokenizer = require('./util/create-tokenizer.js');\nvar miniflat = require('./util/miniflat.js');\nvar constructs = require('./constructs.js');\nfunction parse(options) {\n  var settings = options || {};\n  var parser = {\n    defined: [],\n    constructs: combineExtensions([constructs].concat(miniflat(settings.extensions))),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  };\n  return parser;\n  function create(initializer) {\n    return creator;\n    function creator(from) {\n      return createTokenizer(parser, initializer, from);\n    }\n  }\n}\nmodule.exports = parse;","map":{"version":3,"names":["content","require","document","flow","text","combineExtensions","createTokenizer","miniflat","constructs","parse","options","settings","parser","defined","concat","extensions","create","string","initializer","creator","from","module","exports"],"sources":["D:/SoftwareDevelopment-Group-E-Project/react-app/node_modules/micromark/dist/parse.js"],"sourcesContent":["'use strict'\r\n\r\nvar content = require('./initialize/content.js')\r\nvar document = require('./initialize/document.js')\r\nvar flow = require('./initialize/flow.js')\r\nvar text = require('./initialize/text.js')\r\nvar combineExtensions = require('./util/combine-extensions.js')\r\nvar createTokenizer = require('./util/create-tokenizer.js')\r\nvar miniflat = require('./util/miniflat.js')\r\nvar constructs = require('./constructs.js')\r\n\r\nfunction parse(options) {\r\n  var settings = options || {}\r\n  var parser = {\r\n    defined: [],\r\n    constructs: combineExtensions(\r\n      [constructs].concat(miniflat(settings.extensions))\r\n    ),\r\n    content: create(content),\r\n    document: create(document),\r\n    flow: create(flow),\r\n    string: create(text.string),\r\n    text: create(text.text)\r\n  }\r\n  return parser\r\n\r\n  function create(initializer) {\r\n    return creator\r\n\r\n    function creator(from) {\r\n      return createTokenizer(parser, initializer, from)\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = parse\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAChD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAClD,IAAIE,IAAI,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC1C,IAAIG,IAAI,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAC1C,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AAC/D,IAAIK,eAAe,GAAGL,OAAO,CAAC,4BAA4B,CAAC;AAC3D,IAAIM,QAAQ,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AAC5C,IAAIO,UAAU,GAAGP,OAAO,CAAC,iBAAiB,CAAC;AAE3C,SAASQ,KAAKA,CAACC,OAAO,EAAE;EACtB,IAAIC,QAAQ,GAAGD,OAAO,IAAI,CAAC,CAAC;EAC5B,IAAIE,MAAM,GAAG;IACXC,OAAO,EAAE,EAAE;IACXL,UAAU,EAAEH,iBAAiB,CAC3B,CAACG,UAAU,CAAC,CAACM,MAAM,CAACP,QAAQ,CAACI,QAAQ,CAACI,UAAU,CAAC,CAAC,CACnD;IACDf,OAAO,EAAEgB,MAAM,CAAChB,OAAO,CAAC;IACxBE,QAAQ,EAAEc,MAAM,CAACd,QAAQ,CAAC;IAC1BC,IAAI,EAAEa,MAAM,CAACb,IAAI,CAAC;IAClBc,MAAM,EAAED,MAAM,CAACZ,IAAI,CAACa,MAAM,CAAC;IAC3Bb,IAAI,EAAEY,MAAM,CAACZ,IAAI,CAACA,IAAI;EACxB,CAAC;EACD,OAAOQ,MAAM;EAEb,SAASI,MAAMA,CAACE,WAAW,EAAE;IAC3B,OAAOC,OAAO;IAEd,SAASA,OAAOA,CAACC,IAAI,EAAE;MACrB,OAAOd,eAAe,CAACM,MAAM,EAAEM,WAAW,EAAEE,IAAI,CAAC;IACnD;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGb,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}