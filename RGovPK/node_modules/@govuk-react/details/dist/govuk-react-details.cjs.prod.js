'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var styled = require('styled-components');
var lib = require('@govuk-react/lib');
var polished = require('polished');
var govukColours = require('govuk-colours');
var constants = require('@govuk-react/constants');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var styled__default = /*#__PURE__*/_interopDefault(styled);

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var _excluded = ["summary", "children"];
var CUSTOM_FOCUS_WIDTH = "".concat(Number(polished.stripUnit(constants.FOCUS_WIDTH)) + 1, "px");
var StyledDetails = styled__default["default"]('details').withConfig({
  displayName: "src__StyledDetails",
  componentId: "sc-273hbe-0"
})(lib.typography.font({
  size: 19
}), lib.typography.textColour, lib.spacing.withWhiteSpace({
  marginBottom: 6
}), {
  display: 'block'
});
var StyledSummary = styled__default["default"]('summary').withConfig({
  displayName: "src__StyledSummary",
  componentId: "sc-273hbe-1"
})({
  display: 'inline-block',
  position: 'relative',
  marginBottom: constants.SPACING_POINTS[1],
  paddingLeft: Number(polished.stripUnit(constants.SPACING_POINTS[4])) + Number(polished.stripUnit(constants.BORDER_WIDTH)),
  color: govukColours.LINK_COLOUR,
  cursor: 'pointer',
  ':hover': {
    color: govukColours.LINK_HOVER_COLOUR
  },
  ':focus': {
    outline: "".concat(CUSTOM_FOCUS_WIDTH, " solid ").concat(govukColours.FOCUS_COLOUR),
    outlineOffset: -1,
    color: govukColours.BLACK,
    background: govukColours.FOCUS_COLOUR
  },
  '::-webkit-details-marker': {
    display: 'none'
  },
  ':before': _objectSpread2(_objectSpread2({
    content: '""',
    position: 'absolute',
    top: 0,
    bottom: 0,
    left: 0,
    margin: 'auto'
  }, lib.shape.arrow({
    direction: 'right',
    base: 14
  })), {}, {
    '[open] > &': lib.shape.arrow({
      direction: 'down',
      base: 14
    })
  })
});
var SummaryText = styled__default["default"]('span').withConfig({
  displayName: "src__SummaryText",
  componentId: "sc-273hbe-2"
})({
  textDecoration: 'underline'
});
var DetailsText = styled__default["default"]('div').withConfig({
  displayName: "src__DetailsText",
  componentId: "sc-273hbe-3"
})({
  padding: constants.SPACING_POINTS[3],
  paddingLeft: constants.SPACING_POINTS[4],
  borderLeft: "".concat(constants.BORDER_WIDTH, " solid ").concat(govukColours.BORDER_COLOUR),
  p: {
    marginTop: 0,
    marginBottom: constants.SPACING_POINTS[4]
  },
  '> :last-child, p:last-child': {
    marginBottom: 0
  }
});
/**
 * Make a page easier to scan by letting users reveal more detailed information only if they need it.
 *
 * - https://govuk-react.github.io/govuk-react/?path=/docs/details
 * - https://design-system.service.gov.uk/components/details/
 */

var Details = function Details(_ref) {
  var summary = _ref.summary,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React__namespace.createElement(StyledDetails, props, /*#__PURE__*/React__namespace.createElement(StyledSummary, null, /*#__PURE__*/React__namespace.createElement(SummaryText, null, summary)), /*#__PURE__*/React__namespace.createElement(DetailsText, null, children));
};
Details.defaultProps = {
  children: undefined,
  open: false
};
Details.displayName = 'Details';

exports.Details = Details;
exports["default"] = Details;
