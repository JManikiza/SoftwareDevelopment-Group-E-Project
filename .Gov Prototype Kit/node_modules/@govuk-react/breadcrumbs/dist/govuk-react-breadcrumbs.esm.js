import * as React from 'react';
import styled from 'styled-components';
import { SECONDARY_TEXT_COLOUR } from 'govuk-colours';
import { SPACING_POINTS } from '@govuk-react/constants';
import { link, typography, spacing } from '@govuk-react/lib';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

var Link = styled('a').withConfig({
  displayName: "link__Link",
  componentId: "sc-1rdpl6e-0"
}).apply(void 0, _toConsumableArray(link.common()).concat([link.styleText]));

var _excluded = ["children"];

var CHEVRON_SIZE = 7;
var CHEVRON_BORDER_WIDTH = 1;
var CHEVRON_BORDER_COLOUR = SECONDARY_TEXT_COLOUR;
var CHEVRON_ALTITUDE_CALCULATED = 5.655;
var BreadcrumbsContainer = styled('div').withConfig({
  displayName: "src__BreadcrumbsContainer",
  componentId: "sc-12g859m-0"
})(typography.font({
  size: 16
}), typography.textColour, {
  // margins here are not responsive, hence why they're not specified using withWhiteSpace
  marginTop: SPACING_POINTS[3],
  marginBottom: SPACING_POINTS[2]
}, spacing.withWhiteSpace());
var BreadcrumbsList = styled('ol').withConfig({
  displayName: "src__BreadcrumbsList",
  componentId: "sc-12g859m-1"
})({
  margin: 0,
  padding: 0,
  listStyleType: 'none',
  display: 'block'
});
var BreadcrumbsListItem = styled('li').withConfig({
  displayName: "src__BreadcrumbsListItem",
  componentId: "sc-12g859m-2"
})({
  display: 'inline-block',
  position: 'relative',
  marginBottom: SPACING_POINTS[1],
  marginLeft: SPACING_POINTS[2],
  paddingLeft: SPACING_POINTS[2] + CHEVRON_ALTITUDE_CALCULATED,
  '::before': {
    content: "''",
    display: 'block',
    position: 'absolute',
    top: '-1px',
    bottom: '1px',
    left: CHEVRON_ALTITUDE_CALCULATED * -2 + CHEVRON_SIZE + CHEVRON_BORDER_WIDTH,
    width: CHEVRON_SIZE,
    height: CHEVRON_SIZE,
    margin: 'auto 0',
    transform: 'rotate(45deg)',
    border: 'solid',
    borderWidth: "".concat(CHEVRON_BORDER_WIDTH, "px ").concat(CHEVRON_BORDER_WIDTH, "px 0 0"),
    borderColor: CHEVRON_BORDER_COLOUR
  },
  ':first-child': {
    marginLeft: 0,
    paddingLeft: 0,
    '::before': {
      content: 'none',
      display: 'none'
    }
  }
});
/**
 * The breadcrumbs component helps users to understand where they are within a websiteâ€™s structure and move between levels.
 *
 * - https://govuk-react.github.io/govuk-react/?path=/docs/breadcrumbs
 * - https://design-system.service.gov.uk/components/breadcrumbs/
 */

var Breadcrumbs = function Breadcrumbs(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(BreadcrumbsContainer, props, /*#__PURE__*/React.createElement(BreadcrumbsList, null, Array.isArray(children) ? React.Children.map(children, function (child, i) {
    return child ? /*#__PURE__*/React.createElement(BreadcrumbsListItem, null, child) : null;
  }) : /*#__PURE__*/React.createElement(BreadcrumbsListItem, null, children)));
};
Breadcrumbs.Link = Link;
Breadcrumbs.displayName = 'Breadcrumbs';

export { Breadcrumbs, Breadcrumbs as default };
