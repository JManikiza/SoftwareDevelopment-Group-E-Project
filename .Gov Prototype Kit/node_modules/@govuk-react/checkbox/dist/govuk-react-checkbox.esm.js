import * as React from 'react';
import styled from 'styled-components';
import HintText from '@govuk-react/hint-text';
import { FOCUS_COLOUR } from 'govuk-colours';
import { SPACING_POINTS, FOCUS_WIDTH, BORDER_WIDTH_FORM_ELEMENT, BORDER_WIDTH } from '@govuk-react/constants';
import { typography, spacing } from '@govuk-react/lib';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var _excluded = ["children", "className", "hint"];
var checkboxSize = SPACING_POINTS[7];
var labelPaddingLeftRight = SPACING_POINTS[3];
var StyledCheckbox = styled('label').withConfig({
  displayName: "src__StyledCheckbox",
  componentId: "sc-1hkoucn-0"
})(typography.font({
  size: 19
}), {
  display: 'block',
  position: 'relative',
  minHeight: checkboxSize,
  padding: "0 0 0 ".concat(checkboxSize, "px"),
  clear: 'left'
}, spacing.withWhiteSpace({
  marginBottom: 2
}));
var StyledInput = styled('input').withConfig({
  displayName: "src__StyledInput",
  componentId: "sc-1hkoucn-1"
})({
  position: 'absolute',
  zIndex: 1,
  top: 0,
  left: 0,
  width: checkboxSize,
  height: checkboxSize,
  opacity: 0,
  ':checked + span:after': {
    opacity: 1
  },
  ':focus + span:before': {
    outline: "".concat(FOCUS_WIDTH, " solid transparent"),
    outlineOffset: FOCUS_WIDTH,
    boxShadow: "0 0 0 ".concat(FOCUS_WIDTH, " ").concat(FOCUS_COLOUR)
  }
}, function (_ref) {
  var disabled = _ref.disabled;
  return {
    cursor: disabled ? 'default' : 'pointer',
    ' + span': {
      opacity: disabled ? '.5' : '1',
      pointerEvents: disabled ? 'none' : 'auto'
    }
  };
});
var StyledLabel = styled('span').withConfig({
  displayName: "src__StyledLabel",
  componentId: "sc-1hkoucn-2"
})({
  display: 'inline-block',
  cursor: 'pointer',
  padding: "8px ".concat(labelPaddingLeftRight, "px ").concat(SPACING_POINTS[1], "px"),
  MsTouchAction: 'manipulation',
  touchAction: 'manipulation',
  '::before': {
    content: "''",
    boxSizing: 'border-box',
    position: 'absolute',
    top: 0,
    left: 0,
    width: checkboxSize,
    height: checkboxSize,
    border: "".concat(BORDER_WIDTH_FORM_ELEMENT, " solid black"),
    background: 'transparent'
  },
  '::after': {
    content: "''",
    position: 'absolute',
    top: '11px',
    left: '9px',
    width: '18px',
    height: '7px',
    transform: 'rotate(-45deg)',
    border: 'solid',
    borderWidth: "0 0 ".concat(BORDER_WIDTH, " ").concat(BORDER_WIDTH),
    borderTopColor: 'transparent',
    background: 'transparent',
    opacity: 0
  }
});
var StyledCheckboxHint = styled(HintText).withConfig({
  displayName: "src__StyledCheckboxHint",
  componentId: "sc-1hkoucn-3"
})({
  display: 'block',
  paddingLeft: labelPaddingLeftRight,
  paddingRight: labelPaddingLeftRight
});
/**
 * Let users select one or more options by using the checkboxes component.
 *
 * - https://govuk-react.github.io/govuk-react/?path=/docs/checkbox
 * - https://design-system.service.gov.uk/components/checkboxes/
 */

var Checkbox = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
      className = _ref2.className,
      hint = _ref2.hint,
      props = _objectWithoutProperties(_ref2, _excluded);

  return /*#__PURE__*/React.createElement(StyledCheckbox, {
    className: className
  }, /*#__PURE__*/React.createElement(StyledInput, _extends({
    type: "checkbox"
  }, props, {
    ref: ref
  })), /*#__PURE__*/React.createElement(StyledLabel, null, children), hint && /*#__PURE__*/React.createElement(StyledCheckboxHint, null, hint));
});
Checkbox.displayName = 'Checkbox';
Checkbox.defaultProps = {
  hint: undefined,
  className: undefined
};

export { Checkbox as default };
