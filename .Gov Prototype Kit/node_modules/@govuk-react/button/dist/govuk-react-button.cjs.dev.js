'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styled = require('styled-components');
var React = require('react');
var constants = require('@govuk-react/constants');
var lib = require('@govuk-react/lib');
var govukColours = require('govuk-colours');
var polished = require('polished');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var styled__default = /*#__PURE__*/_interopDefault(styled);
var React__namespace = /*#__PURE__*/_interopNamespace(React);

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _excluded = ["start", "children", "icon"];
var BUTTON_SHADOW_SIZE = constants.BORDER_WIDTH_FORM_ELEMENT;
var RAW_SPACING_2 = constants.SPACING_POINTS[2];
var RAW_BORDER_WIDTH = Number(polished.stripUnit(constants.BORDER_WIDTH_FORM_ELEMENT));
var RAW_SHADOW = Number(polished.stripUnit(BUTTON_SHADOW_SIZE));
var HALF_SHADOW = RAW_SHADOW / 2;
var BASE_PAD = RAW_SPACING_2 - RAW_BORDER_WIDTH;
var StyledButton = styled__default["default"]('button').withConfig({
  shouldForwardProp: function shouldForwardProp(prop) {
    return !['isStart', 'buttonColour', 'buttonHoverColour', 'buttonShadowColour', 'buttonTextColour', 'icon'].includes(String(prop));
  },
  displayName: "src__StyledButton",
  componentId: "sc-19ocyxv-0"
})(function (_ref) {
  var isStart = _ref.isStart;
  return lib.typography.font({
    size: isStart ? '24' : '19',
    lineHeight: isStart ? '1' : '19px',
    weight: isStart ? 'bold' : undefined
  });
}, constants.FOCUSABLE, function (_ref2) {
  var _ref3;

  var _ref2$buttonColour = _ref2.buttonColour,
      buttonColour = _ref2$buttonColour === void 0 ? govukColours.BUTTON_COLOUR : _ref2$buttonColour,
      _ref2$buttonHoverColo = _ref2.buttonHoverColour,
      buttonHoverColour = _ref2$buttonHoverColo === void 0 ? polished.darken(0.05, buttonColour) : _ref2$buttonHoverColo,
      _ref2$buttonShadowCol = _ref2.buttonShadowColour,
      buttonShadowColour = _ref2$buttonShadowCol === void 0 ? buttonColour === govukColours.BUTTON_COLOUR ? govukColours.BUTTON_COLOUR_DARKEN_15 : polished.darken(0.15, buttonColour) : _ref2$buttonShadowCol,
      _ref2$buttonTextColou = _ref2.buttonTextColour,
      buttonTextColour = _ref2$buttonTextColou === void 0 ? govukColours.WHITE : _ref2$buttonTextColou,
      isStart = _ref2.isStart;
  return _ref3 = {
    boxSizing: 'border-box',
    display: 'inline-block',
    position: 'relative',
    width: '100%',
    marginTop: 0,
    padding: isStart // differs from govuk-frontend owing to how icons displayed
    ? "".concat(BASE_PAD, "px ").concat(constants.SPACING_POINTS[3], "px") : "".concat(BASE_PAD - HALF_SHADOW, "px ").concat(constants.SPACING_POINTS[2], "px"),
    border: "".concat(constants.BORDER_WIDTH_FORM_ELEMENT, " solid transparent"),
    borderRadius: 0,
    color: buttonTextColour,
    backgroundColor: buttonColour,
    boxShadow: "0 ".concat(BUTTON_SHADOW_SIZE, " 0 ").concat(buttonShadowColour),
    textAlign: 'center',
    verticalAlign: 'top',
    cursor: 'pointer',
    WebkitAppearance: 'none'
  }, _defineProperty(_ref3, constants.MEDIA_QUERIES.TABLET, {
    width: 'auto'
  }), _defineProperty(_ref3, '&:link, &:visited, &:active, &:hover', {
    color: buttonTextColour,
    textDecoration: 'none'
  }), _defineProperty(_ref3, '&::-moz-focus-inner', {
    padding: 0,
    border: 0
  }), _defineProperty(_ref3, '&:hover, &:focus', {
    backgroundColor: buttonHoverColour
  }), _defineProperty(_ref3, ':active', {
    top: BUTTON_SHADOW_SIZE,
    boxShadow: 'none'
  }), _defineProperty(_ref3, '::before', {
    content: '""',
    display: 'block',
    position: 'absolute',
    top: "-".concat(constants.BORDER_WIDTH_FORM_ELEMENT),
    right: "-".concat(constants.BORDER_WIDTH_FORM_ELEMENT),
    bottom: "-".concat(RAW_BORDER_WIDTH + RAW_SHADOW, "px"),
    left: "-".concat(constants.BORDER_WIDTH_FORM_ELEMENT),
    background: 'transparent'
  }), _defineProperty(_ref3, '&:active::before', {
    top: "-".concat(RAW_BORDER_WIDTH + RAW_SHADOW, "px")
  }), _defineProperty(_ref3, ':disabled', {
    opacity: 0.5,
    background: buttonColour,
    ':hover': {
      backgroundColor: buttonColour,
      cursor: 'default'
    },
    ':focus': {
      outline: 'none'
    },
    ':active': {
      top: 0,
      boxShadow: "0 ".concat(BUTTON_SHADOW_SIZE, " 0 ").concat(buttonShadowColour)
    }
  }), _defineProperty(_ref3, ' svg', _defineProperty({
    maxWidth: '15px'
  }, constants.MEDIA_QUERIES.TABLET, {
    marginLeft: constants.SPACING_POINTS[2]
  })), _ref3;
}, // NB we drift from govuk-frontend here in how we display icons
function (_ref4) {
  var icon = _ref4.icon;

  if (icon) {
    return {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between'
    };
  }

  return undefined;
}, lib.spacing.withWhiteSpace({
  margin: {
    direction: 'bottom',
    size: 6,
    adjustment: RAW_SHADOW
  }
}));
var ButtonContents = styled__default["default"]('span').withConfig({
  displayName: "src__ButtonContents",
  componentId: "sc-19ocyxv-1"
})({
  flexGrow: 1
});

/**
 * Use the button component to help users carry out an action like starting an application or saving their information.
 *
 * - https://govuk-react.github.io/govuk-react/?path=/docs/button
 * - https://design-system.service.gov.uk/components/button/
 */
var Button = /*#__PURE__*/React__namespace.forwardRef(function (_ref5, ref) {
  var start = _ref5.start,
      children = _ref5.children,
      icon = _ref5.icon,
      props = _objectWithoutProperties(_ref5, _excluded);

  return /*#__PURE__*/React__namespace.createElement(StyledButton, _extends({
    ref: ref,
    isStart: start,
    icon: icon
  }, props), icon ? /*#__PURE__*/React__namespace.createElement(ButtonContents, null, children) : children, icon);
});
Button.defaultProps = {
  icon: undefined,
  start: false,
  buttonColour: undefined,
  buttonHoverColour: undefined,
  buttonShadowColour: undefined,
  buttonTextColour: undefined
};
Button.displayName = 'Button';

exports.Button = Button;
exports["default"] = Button;
